<style type="text/css">
    /* Web Grid Style */
    .CompareX {
        padding: 0 18px;
        /*display: none;*/
        background-color: floralwhite;
        /*overflow: hidden;*/
    }

    .ICDTextWidth {
        width: 100px;
    }

    .grid_blk {
        border: 1px solid #c6cfc3;
        padding: 3px;
        margin-top: 10px;
    }

    .webGrid {
        /*border-collapse: collapse;*/
        width: 100%;
        border-collapse: collapse;
    }
    /**/ /**/ /**/ /**/ /**/
    .headerNewCPT {
        background-color: rgba(223, 240, 235, 0.933) !important; /* #7aa853;*/
        font-weight: bold;
        color: #444; /*#fff;*/
        text-decoration: none;
        padding: 2px 0;
        padding-left: 4px;
        border-bottom: 1px solid #ddd;
    }

    .headerNew {
        background-color: #fcd8bc !important; /* #7aa853;*/
        font-weight: bold;
        color: #444; /*#fff;*/
        text-decoration: none;
        padding: 2px 0;
        padding-left: 4px;
        border-bottom: 1px solid #ddd;
    }

    .CodingSection {
        height: 64vh;
        overflow-y: auto;
    }

    .icdblock {
        background-color: rgba(240, 250, 250, 0.933); /* #7aa853;*/
        font-weight: bold;
        color: #444; /*#fff;*/
        text-decoration: none;
        padding: 2px 0;
        margin-bottom: 2px;
        padding-left: 4px;
        border-bottom: 1px solid #ddd;
    }

    .PrimaryHeading, .SecondaryHeading, .TertiaryHeading {
        background-color: rgba(130, 150, 140, 0.933); /* #7aa853;*/
        font-weight: bold;
        color: #fff; /*#fff;*/
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
        text-decoration: none;
        padding: 2px 0;
        margin-bottom: 2px;
        padding-left: 4px;
        border-bottom: 1px solid #ddd;
    }

    .divAddNewTertiary {
        float: right;
        padding: 2px 5px;
    }

    .btnAddNewTertiary {
        margin-bottom: 2px !important;
    }

    .cptReason {
    }

    .cptModifier {
    }

    .ICDColumn {
        width: 3% !important;
        display: table-cell;
    }

    .ICDIconColumn {
        width: 2% !important;
        display: table-cell;
    }

    .NoteColumn {
        width: 20% !important;
        display: table-cell;
    }

    .NoteColumn1 {
        width: 24% !important;
        display: table-cell;
    }

    .HCCSourceColumn {
        width: 30% !important;
        display: table-cell;
    }

    .HCCSourceColumn1 {
        width: 35% !important;
        display: table-cell;
    }

    .QueryColumn {
        width: 30% !important;
        display: table-cell;
    }

    .QueryColumn1 {
        width: 27% !important;
        display: table-cell;
    }

    .ActionColumn {
        width: 6% !important;
        display: table-cell;
    }

    .margintop5 {
        margin-top: 5px !important;
    }

    .btnPlus, .btnMinus {
        font-weight: bold;
        color: #fff !important; /*#fff;*/
        border-radius: 20px !important;
        text-decoration: none;
        padding: 0px 0 !important;
        margin-bottom: 0px !important;
        margin-left: 10px !important;
        line-height: 0% !important;
        height: 20px !important;
        border-bottom: 1px solid #ddd;
        width: 20px !important;
    }

    .btnPlus {
        background-color: rgba(0, 120, 100, 0.933) !important; /*  #7aa853;*/
    }

    .btnMinus {
        background-color: rgba(180, 0, 0, 0.933) !important; /* #7aa853;*/
    }

    .webGrid th, .webGrid td {
        border: 1px solid #b3bfaf;
        padding: 5px;
    }

    .odd {
        background-color: #e7e7e7; /*#ecefeb;*/
    }

    .even {
        background-color: #e7e7e7; /* #f5f7f5;*/
    }

    /*.description {
            width: auto;
        }*/

    .select {
        background-color: #71857C;
    }

    .gridtitle h2 {
        font-size: 14px;
        margin: 0;
        text-align: center;
        background: #808c7c;
        color: #fff;
        line-height: 25px;
    }

    /* Web Grid without width*/

    .webGrid_WithoutWidth {
        width: 50%;
        border-collapse: collapse;
    }

        .webGrid_WithoutWidth th, .webGrid_WithoutWidth td {
            border: 1px solid #b3bfaf;
            padding: 5px;
        }
    /* custom lightbox styling */
    .lightbox {
        z-index: 10;
    }

    .lightbox_table_cell {
        vertical-align: top;
    }

    .lightboxclosebtn {
        position: absolute;
        top: 0px;
        right: 0px;
        z-index: 9999999;
    }
    /*jquery ui*/



    .chosen-container {
        width: 200px !important;
    }

    .chart-col1, .chart-col_Unit1, .chart-col2, .chart-col3, .chart-col_Unit2, .chart-col4, .chart-col5, .chart-col6, .chart-col7, .chart-col8, .chart-col9, .chart- col10, .assess-col1, .assess-col2 {
        float: left;
        margin-right: 3px;
    }

    .chart-col1 {
        width: 45px;
    }

    .chart-col_Unit1 {
        width: 42px;
    }

    .chart-col2 {
        width: 45px;
    }

    .chart-col3 {
        width: 45px;
    }

    .chart-col_Unit2 {
        width: 20px;
    }

    .chart-col4 {
        width: 45px;
    }

    .chart-col5 {
        width: 43px;
    }

    .chart-col6 {
        width: 270px;
    }

    .chart-col7 {
        width: 270px;
    }

    .chart-col8 {
        width: 270px;
    }

    .chart-col9 {
        width: 45px;
    }

    .chart-col10 {
        width: 10%;
    }

    textarea {
        width: 95%;
        height: 50px;
    }

    .addbtn {
        background: url(Images/sprite.png) 701px 349px;
        width: 20px;
        height: 20px;
        display: block;
    }

    .codeblk {
        /*background:#c9dcba;*/
        border: 1px solid #7aa853;
        /*padding:5px;*/
        max-height: 450px;
        overflow: auto;
        margin-top: 10px;
    }

    .cptcodeblk {
        background: #FFFFFF;
        padding: 5px;
        /*border:1px solid #7aa853;*/
        /*margin-bottom:5px;*/
    }



        .cptcodeblk input[type="text"] {
            width: 90%;
            line-height: 23px;
        }

    input[type="text"].ICDTextWidth {
        width: 60px;
    }

    .cptcodeblk select {
        width: 95%;
    }

    .cptcodeblk textarea {
        width: 90%;
        height: 20px;
    }

    .PE {
        padding: 10px;
        border-bottom: 1px solid #7aa855;
        background: #f5f9f2;
    }
    /*.PE:nth-child(odd){background:#f5f9f2;}
        .PE:nth-child(even){background:#c9dcba;}*/
    .icdcodetbl {
        /*  border: 1px solid #537aa8; /*blue
            border: 1px solid #eb994f; /*orange*/
        background: #fcf1e8;
        border-radius: 3px;
        /* background:#dce4ed;*/ /*blue*/
        margin-top: 5px;
        border-collapse: collapse;
    }

        .icdcodetbl .headerNew {
            /* background-color: #537aa8;*/ /*blue*/
            background-color: #f5ceab; /* #eb994f orange*/
            border-bottom: 1px solid #eb994f;
        }

    .statusindi {
        width: 10px;
        height: 10px;
        margin-left: 2px;
        display: inline-block;
    }
    /*
        .red{background:#f66;}
        .grn{background:#4ca64c;}
        .blue{background:#66b2ff;}*/

    .statusindi {
    }

    .red1 {
        background: url(../Images/Coding_Red.png);
    }

    .hcc {
        background: url(../Images/icon-hcc2.png);
        width: 26px !important;
        height: 26px !important;
        background-repeat: no-repeat;
    }

    .grn {
        background: url(../Images/Coding_Square.png);
    }

    .blue {
        background: url(../Images/Coding_Triangle.png);
    }

    .w230 {
        width: 230px !important;
    }

    /*added by sarvesh for mark as variance*/
    .labelM {
        float: right;
        margin-right: 30px;
    }

    div.inline {
        float: left;
    }

    .accordion {
        background-color: dimgrey;
        color: #444;
        cursor: pointer;
        padding: 0px;
        width: 100%;
        /*border: none;*/
        text-align: left;
        outline: none;
        font-size: 15px;
        transition: 0.4s;
        /*background-color: #eee;
        color: #444;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: left;
        outline: none;
        font-size: 15px;
        transition: 0.4s;*/
    }

        .active, .accordion:hover {
            /*background-color: #ccc;*/
        }

    .panel {
        padding: 0 18px;
        display: none;
        background-color: white;
        overflow: hidden;
    }

    .cheiefComplain {
        width: 70%;
        align-self: flex-start !important;
    }

    input:focus {
        box-shadow: 0 0 5px rgba(81, 203, 238, 1);
        /*padding: 1px 0px 3px 3px;
        margin: 5px 1px 3px 0px;*/
        border: 1px solid rgba(81, 203, 238, 1);
    }

    select:focus {
        box-shadow: 0 0 5px rgba(81, 203, 238, 1);
        /*padding: 1px 0px 3px 3px;
        margin: 5px 1px 3px 0px;*/
        border: 1px solid rgba(81, 203, 238, 1);
    }

    .ClsPad {
        padding: 20px;
        padding-top: 20px;
        padding-left: 1px;
    }


    .DisableDiv {
        background-color: rgba(0,0,0,.4);
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 99999 !important;
        overflow-y: hidden;
    }

    .loader {
        position: absolute;
        height: 60px;
        width: 60px;
        border: 3px solid transparent;
        border-top-color: #e8e8e8;
        top: 50%;
        left: 50%;
        margin: -30px;
        border-radius: 50%;
        animation: spin 2s linear infinite;
    }

        .loader:before, .loader:after {
            content: '';
            position: absolute;
            border: 3px solid transparent;
            border-radius: 50%;
        }

        .loader:before {
            border-top-color: #b0dd09;
            top: -12px;
            left: -12px;
            right: -12px;
            bottom: -12px;
            animation: spin 3s linear infinite;
        }

        .loader:after {
            border-top-color: #e28c13;
            top: 6px;
            left: 6px;
            right: 6px;
            bottom: 6px;
            animation: spin 4s linear infinite;
        }



    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }
</style>

<div id="DisableDiv"></div>
<input type="hidden" value="@ViewBag.Encounternumber" id="ViewBagEncounter" />
<div id="linkDiv">

</div>

<div id="Coding"></div>
<div id="CodingQA"></div>

<div class="ClsPad">
    <div class="fl">
        <div class="labelleft">Encounter No. :</div>
        <div class="fl">
            <label id="lblEncounterNumber"></label>
        </div>

    </div>
    <div class="fl marginleft40">
        <div class="labelleft">Appointment Date :</div>
        <div class="fl">
            <label id="lblAppointmentDate"></label>
        </div>

    </div>
    <div class=" fl marginleft40">
        <div class="labelleft">Appointment Time :</div>
        <div class="fl">
            <label id="lblAppointmentTime"></label>
        </div>
    </div>
    <div class="clr"></div>
    <div class="labelleft mT10">Chief Complaint :</div>
    <div class="fl mT10 inline">
        <input type="text" style="width: 565px" id="txtChiefCompliant" />
    </div>
    <br />
</div>

<div id="codingForm" class="col12 CodingSection">

</div>
<div>
    <input type="button" value="Save" id="btnSave" onclick="OnSave('save')" />
    <input type="button" value="Submit" id="btnSubmit" onclick="OnSave('submit')" />
    <input type="button" value="Cancel" id="btnCancel" onclick="CancelCodingDetails()" />
</div>

<script src="~/Scripts/lodash.js"></script>

<script src="~/Scripts/IcdCptCode.js?v=1.0"></script>
<script>

    let secondaryDiv = '<div class="col12"><div class="col12 inline icdblock"><div class="col12 SecondaryHeading" ><label class="SecondaryHeadingLabel">Secondary Diagnosis</label></div><table id="tbl_SecondaryICd_$$id"><thead><tr><th class="headerNew ICDColumn">Prov ICD</th><th class="headerNew ICDColumn">Iks ICD</th><th class="headerNew ICDIconColumn"></th><th class="headerNew NoteColumn1">Notes</th><th class="headerNew HCCSourceColumn1">Source Of HCC</th><th class="headerNew QueryColumn1">Query</th><th class="headerNew ActionColumn">Action</th></tr></thead>';
    //for Storiing data at js level
    let NoteCPTCodeReason_List = '';
    let NoteCPTCode_List = '';
    let NoteModifiere_List = '';
    let HCCSource_List = '';
    let Notes_List = '';
    let HccClassification = '';
    let HccClassification_Associates = '';
    let basedata;
    let isCodingCompleted;

    let cptcount = 0;
    let pageobject;
    let PageObjectConfiguration = {
        "async": true,
        "crossDomain": true,
        "url": "/vbaworkorder/GetCodingInformation?datakey=",
        "method": "POST"
    };


    let SavingCodingFormConfiguration = {
        "async": true,
        "crossDomain": true,
        "url": "/vbaworkorder/NewOnSaveCodingDetails",
        "method": "POST",
        "data": ''
    };


    function CheckHcc(icd) {
        //check if this inserted ICD BELONGS TO HCC OR NOT
        var d;
        var isHcc = {
            "async": true,
            "crossDomain": true,
            "url": "/VBAWorkOrder/CheckIsHCCNew?ICDcode=" + icd,
            "method": "POST",
            "async": false,
        };

        $.ajax(isHcc).done(function (data) {
            d = data;
        });
        return d;
    }

    $(document).ready(function () {
        showProgressBar();
        var a = $('#ViewBagEncounter').val();
        PageObjectConfiguration.url += a;
        $.ajax(PageObjectConfiguration).done(function (response) {
            if (response) {
                basedata = response;
                $('#lblEncounterNumber').text(response.EncounterNumber);
                $('#lblAppointmentDate').text(response.AppointmentDateInfo);
                $('#lblAppointmentTime').text(response.AppointmentTime);
                $('#txtChiefCompliant').val(response.Presenting_Complaint);
                //$('#txtChiefCompliant').attr('readonly', 'readonly');
                // cptcount = response.Coding_CptCode_List.length - 1;
                cptcount = response.Coding_CptCode_List_Count;

                if (response.CodingStatus == 1) {
                    alert('You have already submitted coding details.');
                    isCodingCompleted = true;
                    $('#btnSave').attr("hidden", true);
                    $('#btnSubmit').attr("hidden", true);
                    $('#btnCancel').attr("hidden", false);
                    $('#txtChiefCompliant').attr("disabled", true);
                }
                else {
                    isCodingCompleted = false;
                    $('#btnSave').attr("hidden", false);
                    $('#btnSubmit').attr("hidden", false);
                    $('#btnCancel').attr("hidden", false);
                    //$('#txtChiefCompliant').attr("disabled", false);
                }

                if (response.DeptId == 7) {
                    var linkhtml = ""
                    linkhtml += '<div class="labelleft">Compare With :</div>';
                    linkhtml += '<div class="fl">';
                    linkhtml += '<a href="#" id="LnkViewCoding" style="color:blue;" onclick="return lnkView(\'' + response.EncounterNumber + '\',6);">Coding</a>';
                    linkhtml += '</div>';
                    $('#linkDiv').html(linkhtml);
                }
                else if (response.DeptId == 11) {
                    var linkhtml = "";
                    linkhtml += '<div class="labelleft">Compare With :</div>';
                    linkhtml += '<div class="fl">';
                    linkhtml += '<a href="#" id="LnkViewCoding1" style="color:blue;" onclick="return lnkView(\'' + response.EncounterNumber + '\',6);">Coding</a>';
                    linkhtml += '<a href="#" id="LnkViewCodingQA1" style="color:blue;" onclick="return lnkView(\'' + response.EncounterNumber + '\',7);">Coding QA1</a>';
                    linkhtml += '</div>';
                    $('#linkDiv').html(linkhtml);
                }

                if (HccClassification_Associates.length == 0) {
                    HccClassification_Associates = response.HccClassification_Associates;
                }

                if (HccClassification.length == 0) {
                    HccClassification = response.HccClassification;
                }

                if (NoteCPTCodeReason_List.length == 0) {
                    NoteCPTCodeReason_List = response.Coding_CptCode_List[0].NoteCPTCodeReason_List;//cpts[0].NoteCPTCodeReason_List;
                    NoteCPTCodeReason_List.unshift({
                        Description: "select",
                        TypeId: 0,
                        color: "",
                        id: 0
                    });
                }
                if (NoteCPTCode_List.length == 0) {
                    NoteCPTCode_List = response.Coding_CptCode_List[0].NoteCPTCode_List;
                    NoteCPTCode_List.unshift({
                        Description: "select",
                        TypeId: 0,
                        color: "",
                        id: 0
                    });
                }

                if (NoteModifiere_List.length == 0) {
                    NoteModifiere_List = response.Coding_CptCode_List[0].NoteModifiere_List;
                    NoteModifiere_List.unshift({
                        Description: "select",
                        TypeId: 0,
                        color: "",
                        id: 0
                    });
                }

                if (HCCSource_List.length == 0) {
                    HCCSource_List = response.Coding_CptCode_List[0].coding_ICD_List[0].HCCSource_List;
                    HCCSource_List.unshift({
                        HCCSource: "select",
                        HCCSourceId: 0
                    });
                }

                if (Notes_List.length == 0) {
                    Notes_List = response.Coding_CptCode_List[0].coding_ICD_List[0].Notes_List;
                    Notes_List.unshift({
                        Description: "select",
                        TypeId: 0,
                        color: "",
                        id: 0
                    });
                }

                let html = "";

                if (response.Coding_CptCode_List_Count > 0) {
                    html = LoadCptIcds(response.Coding_CptCode_List);
                    //for some reason repeating the code
                    $('#codingForm').html(html);
                    var x = $('#codingForm >div');
                    $(x[0]).click();
                }
                else {
                    html = LoadDefaultTemplate();
                    //for some reason repeating the code
                    $('#codingForm').html(html);
                    var x = $('#codingForm >div');
                    $(x[0]).click();
                }



                QueryHoverEventBinder();
                hideProgressBar();
                //FirstAccordianClicked();
            }
        });



    });

    function LoadDefaultTemplate() {
        AddNewCpt();
        QueryHoverEventBinder();
    }

    function LoadCptIcds(cpts) {

        let cptHtml = "";
        let primaryHtml = "";
        let secondaryHtml = "";
        let tertiaryhtml = "";
        let fullHtml = '';

        for (var j = 0; j < cpts.length; j++) {
            primaryHtml = "";
            secondaryHtml = "";
            cptHtml = "";
            cptHtml += '<div class="accordion inline" onclick="AccordianClick(this)"></span><span class="iconarrowup"></span><label id=' + 'lbl' + j +

'></label><span>&nbsp;</span>';
            cptHtml += '<div id="' + j + '" style="pointer-events:none" >' + ReplicateCpt(j, cpts[j]) + '<div></div>' + '</div>'; // ReplicateCpt(j, cpts[j])
            cptHtml += '</div><div id="cpt_number_' + j + '" class="panel col12">' + FormCptDiv(cpts[j], j);
            //cpts[j].coding_ICD_List_Count = cpts[j].coding_ICD_List.length;
            if (cpts[j].coding_ICD_List_Count > 0) {

                //var pm = cpts[j].coding_ICD_List.filter(function (dx) { return dx.icdLevel == 1 });
                //if (pm.length == 0) {
                //    if (cpts[j].coding_ICD_List[0]!=undefined) {
                //        cpts[j].coding_ICD_List[0].IcdLevel = 0;
                //    }

                //}

                for (var i = 0; i < cpts[j].coding_ICD_List.length; i++) {

                    if (cpts[j].coding_ICD_List[i].IcdLevel == 0) {
                        primaryHtml += FormPrimaryDiv(cpts[j].coding_ICD_List[i], j);
                    }
                    else if (cpts[j].coding_ICD_List[i].IcdLevel == 1) {
                        secondaryHtml += FormSecondaryTable(cpts[j].coding_ICD_List[i], j, i);
                    }
                }

                var tertiaryicds = cpts[j].coding_ICD_List.filter(function (itx) {
                    if (itx.IcdLevel == 2) {
                        return itx;
                    }
                });


                var segre = _.groupBy(tertiaryicds, function (c) { return c.HccAssociationId });
                var keys = Object.keys(segre);
                let tertiaryData = "";
                for (var l = 0; l < keys.length; l++) {
                    var tertiary_table_data = "";
                    var tertiary_table_hearder = "";
                    tertiary_table_hearder += FormTertiaryTableHeader(j, l + 1, keys[l]);
                    for (var m = 0; m < segre[keys[l]].length; m++) {
                        tertiary_table_data += FormtertiaryTableRow(j, l + 1, m + 1, segre[keys[l]][m]);
                    }
                    tertiary_table_data += "</table></div></div>";
                    tertiaryData += tertiary_table_hearder + tertiary_table_data + '</div>';
                }

                var aSecondaryDiv = secondaryDiv.replace('$$id', j);

                if (primaryHtml.length == 0) {
                    primaryHtml += FormPrimaryDiv(undefined, j);
                }

                if (secondaryHtml.length == 0) {
                    secondaryHtml += FormSecondaryTable(undefined, j, 1);
                }

                if (tertiaryData.length == 0) {
                    tertiary_table_hearder = FormTertiaryTableHeader(j, 1, undefined);
                    tertiaryData = tertiary_table_hearder + (FormtertiaryTableRow(j, 1, 1, undefined) + '</table></div></div>');
                }

                secondaryHtml = aSecondaryDiv + secondaryHtml + '</div></table></div>';

                fullHtml += cptHtml + primaryHtml + secondaryHtml + '<div id="divHcc_' + j + '"  class="col12">' + tertiaryData + '</div></div></div></div></div>';
            }
            else {
                var aSecondaryDiv = secondaryDiv.replace('$$id', j);
                secondaryHtml = aSecondaryDiv + (FormSecondaryTable(undefined, j, 1)) + '</div></table></div>';
                fullHtml += (cptHtml) + (FormPrimaryDiv(undefined, j)) + secondaryHtml + ' <div id="divHcc_' + j + '"  class="col12">' + (FormTertiaryTableHeader(j, 1,

undefined) + FormtertiaryTableRow(j, 1, 1, undefined)) + '</table></div></div>' + '</div></div></div></div>';
            }

        }


        return fullHtml;
    }

    function HandleOnSave(cpt) {
        var html = "";
        //var x = AsyncTest(selectedcpt, id);
        var selectedcpt = cpt.NoteCPTCode;
        $.ajax({
            "async": false,
            "crossDomain": true,
            "url": "/vbaworkorder/GetCptReason?cptId=" + selectedcpt,
            "method": "POST"
        }).
        then(function (xz) {
            if (xz.length > 1) {
                html += FormCptReasonDpd(xz, cpt.CptId, cpt.NoteCPTCodeReason);
            }
            else {
                html += FormCptReasonDpd(xz, cpt.CptId, cpt.OtherNoteCPTCodeReason);
            }

        });
        return html;
    }

    //cpt level functions
    function FormCptDiv(cptinfo, cptix) {
        var cpthtml = "<br>";
        let codingcptHeader = '<div id="divCptCodeHeader" class="headerNewCPT fl width100"><div class="chart-col1">Phy CPT</div><div class="chart-col_Unit1">Unit</div><div class="chart-col2">Phy Mod</div><div class="chart-col3">IKS CPT</div><div class="chart-col_Unit1">Unit</div><div class="chart-col4">IKS Mod</div><div class="chart-col5">&nbsp;</div><div class="chart-col6">CPT</div><div class="chart-col7">CPT Reason</div><div class="chart-col8">Modifier</div><div class="chart-col9">Query</div><div class="chart-col10"></div></div>';
        let CodingCptData = '';
        CodingCptData += '<div class="cptcodeblk">';
        if (cptinfo) {
            CodingCptData += '<div class="chart-col1 cpt-control ui-autocomplete-input"><input type="text" class="inputx" maxlength="6" id="PhyCpt_' + cptix + '" value="' + (cptinfo.CPTcode_PhySelected == null ? '' : cptinfo.CPTcode_PhySelected) + '" onchange="onCptChange(' + cptix + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col_Unit1"><input type="text" maxlength="3" id="PhyUnit_' + cptix + '" value="' + (cptinfo.Unit_PhySelected == null ?

'' : cptinfo.Unit_PhySelected) + '" onchange="onUnitChange(' + cptix + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col2 cpt-control ui-autocomplete-input"><input type="text" class="inputx" maxlength="3" id="PhyMod_' + cptix + '" value="' + (cptinfo.Modifier_PhySelected == null ? '' : cptinfo.Modifier_PhySelected) + '" onchange="onModifierChange(' + cptix + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col3  cpt-control ui-autocomplete-input"><input type="text" class="inputx" maxlength="6" id="IksCpt_' + cptix + '" value="' + (cptinfo.CPTCode_IKSSelected == null ? '' : cptinfo.CPTCode_IKSSelected) + '" onchange="OnIksCptChange(' + cptix + ',' + cptinfo.NoteCPTCode + ',' + cptinfo.NoteCPTCodeReason + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col_Unit1"><input type="text" class="inputx" maxlength="3" id="IksUnit_' + cptix + '" value="' +

(cptinfo.Unit_IksSelected == null ? '' : cptinfo.Unit_IksSelected) + '" onchange="OnIksUnitChange(' + cptix + ',' + cptinfo.NoteCPTCode + ',' +

cptinfo.NoteCPTCodeReason + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col4 cpt-control ui-autocomplete-input"><input type="text" class="inputx" maxlength="3" id="IksMod_' + cptix + '" value="' + (cptinfo.Modifier_IKSSelected == null ? '' : cptinfo.Modifier_IKSSelected) + '" onchange="OnIksModifierChange(' + cptix + ',' + cptinfo.NoteModifier + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col5">';
            CodingCptData += '<div id="Cpt_IcdStatus_Green_' + cptix + '" class="statusindi grn" style="display:' + (((cptinfo.CPTcode_PhySelected.length != 0 &&

cptinfo.CPTCode_IKSSelected.length != 0) && ((cptinfo.CPTcode_PhySelected == cptinfo.CPTCode_IKSSelected) && (cptinfo.Unit_PhySelected == cptinfo.Unit_IksSelected) &&

(cptinfo.Modifier_PhySelected == cptinfo.Modifier_IKSSelected))) ? 'block' : 'none') + '; vertical-align: top;"></div>';
            CodingCptData += '<div id="Cpt_IcdStatus_Blue_' + cptix + '" class="statusindi blue" style="display:' + (((cptinfo.Modifier_PhySelected !=

cptinfo.Modifier_IKSSelected)) ? 'block' : 'none') + '; vertical-align: top;"></div>';
            CodingCptData += '<div id="Cpt_IcdStatus_Red_' + cptix + '" class="statusindi red1" style="display:' +
                (((cptinfo.CPTcode_PhySelected != cptinfo.CPTCode_IKSSelected) || (cptinfo.Unit_PhySelected != cptinfo.Unit_IksSelected))
                ? 'block' : 'none') + '; vertical-align: top;"></div>';
            CodingCptData += '</div>';
            CodingCptData += '<div class="chart-col6"><div id = "Cpt_' + cptix + '"> ' +
                 FormingCptCase(cptinfo, cptix)
                 + '&nbsp;</div></div>';
            CodingCptData += '<div class="chart-col7"><div id = "CptReason_' + cptix + '">' +
                FormingCptReasonCase(cptinfo, cptix)
                 + '&nbsp;</div></div>';
            CodingCptData += '<div class="chart-col8"><div id = "Modifier_' + cptix + '">' +
                FormingCptModifierCase(cptinfo, cptix)
                + '&nbsp;</div></div>';
            CodingCptData += '<div class="chart-col9"><input type="text" maxlength="300" id="Query_' + cptix + '" value="' + cptinfo.Query + '"' + (isCodingCompleted

== true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col11"><input type="button" value="+"  class="btnPlus" onclick="AddNewCpt()"' + (isCodingCompleted == true ?

'disabled="true"' : '') + '/><input type="button" value="-"  class="btnMinus" onclick="DeleteCpt(' + cptix + ')"' + (isCodingCompleted == true ? 'disabled="true"' :

'') + '/></div>';
        }
        else {
            CodingCptData += '<div class="chart-col1 cpt-control"><input type="text" class="inputx" maxlength="6" id="PhyCpt_' + cptix + '" value="" onchange="onCptChange(' + cptix + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col_Unit1"><input type="text" class="inputx" maxlength="3" id="PhyUnit_' + cptix + '" value="" onchange="onUnitChange('

+ cptix + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col2 cpt-control"><input type="text" class="inputx" maxlength="3" id="PhyMod_' + cptix + '" value="" onchange="onModifierChange(' + cptix + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col3 cpt-control"><input type="text" class="inputx" maxlength="6" id="IksCpt_' + cptix + '" value="" onchange="OnIksCptChange(' + cptix + ',undefined,undefined)"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col_Unit1"><input type="text" class="inputx" maxlength="3" id="IksUnit_' + cptix + '" value="" onchange="OnIksUnitChange(' + cptix + ',undefined,undefined)"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col4 cpt-control"><input type="text" class="inputx" maxlength="3" id="IksMod_' + cptix + '" value="" onchange="OnIksModifierChange(' + cptix + ',undefined,undefined)"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col5">';
            CodingCptData += '<div id="Cpt_IcdStatus_Green_' + cptix + '" class="statusindi grn" style="display:none; vertical-align: top;"></div>';
            CodingCptData += '<div id="Cpt_IcdStatus_Blue_' + cptix + '" class="statusindi blue" style="display:none; vertical-align: top;"></div>';
            CodingCptData += '<div id="Cpt_IcdStatus_Red_' + cptix + '" class="statusindi red1" style="display:none; vertical-align: top;"></div>';
            CodingCptData += '</div>';
            CodingCptData += '<div class="chart-col6"><div><div id = "Cpt_' + cptix + '">&nbsp;</div>&nbsp;</div></div>';
            CodingCptData += '<div class="chart-col7"><div><div id = "CptReason_' + cptix + '">&nbsp;</div>&nbsp;</div></div>';
            CodingCptData += '<div class="chart-col8"><div><div id = "Modifier_' + cptix + '">&nbsp;</div>&nbsp;</div></div>';
            CodingCptData += '<div class="chart-col9"><input type="text" maxlength="300"  id="Query_' + cptix + '" value=""' + (isCodingCompleted == true ?

'disabled="true"' : '') + '></div>';
            CodingCptData += '<div class="chart-col11"><input type="button" value="+"  class="btnPlus" onclick="AddNewCpt()"' + (isCodingCompleted == true ?

'disabled="true"' : '') + '/><input type="button" value="-"  class="btnMinus" onclick="DeleteCpt(' + cptix + ')"' + (isCodingCompleted == true ? 'disabled="true"' :

'') + '/></div>';
        }
        CodingCptData += '</div>';

        cpthtml += codingcptHeader + CodingCptData;
        return cpthtml;
    }

    function onCptChange(ix) {
        var phycpt = $('#PhyCpt_' + ix).val();
        $('#IksCpt_' + ix).val(phycpt);
        var ikscpt = $('#IksCpt_' + ix).val();
        var phyUnit = $('#PhyUnit_' + ix).val();
        var iksunit = $('#IksUnit_' + ix).val();

        var PhyMod = $('#PhyMod_' + ix).val();
        var iksmod = $('#IksMod_' + ix).val();

        if (phycpt.length != 0) {
            if ((phyUnit == iksunit) && (phycpt == ikscpt)) {
                $('#Cpt_IcdStatus_Green_' + ix).show('slow');
                $('#Cpt_IcdStatus_Red_' + ix).hide('slow');
            }
            else {
                $('#Cpt_IcdStatus_Green_' + ix).hide('slow');
                $('#Cpt_IcdStatus_red_' + ix).show('slow');
            }

            if (PhyMod != iksmod) {
                $('#Cpt_IcdStatus_Blue_' + ix).show('slow');
            }
            else {
                $('#Cpt_IcdStatus_Blue_' + ix).hide('slow');
            }
        }
        else {
            if ((phyUnit.length != 0 || iksunit.length != 0) && (phyUnit == iksunit)) {
                $('#Cpt_IcdStatus_Green_' + ix).show('slow');
                $('#Cpt_IcdStatus_Red_' + ix).hide('slow');
            }
            else if ((phyUnit.length != 0 || iksunit.length != 0) && (phyUnit != iksunit)) {
                $('#Cpt_IcdStatus_Red_' + ix).show('slow');
                $('#Cpt_IcdStatus_Green_' + ix).hide('slow');
            }
            else if ((phyUnit.length == 0 && iksunit.length == 0)) {
                $('#Cpt_IcdStatus_Red_' + ix).hide('slow');
                $('#Cpt_IcdStatus_Green_' + ix).hide('slow');

                $('#Cpt_' + ix).html('&nbsp;');//change by rohit
                $('#CptReason_' + ix).html('&nbsp;');//change by rohit
            }

            if (PhyMod != iksmod) {
                $('#Cpt_IcdStatus_Blue_' + ix).show('slow');
            }
            else {
                $('#Cpt_IcdStatus_Blue_' + ix).hide('slow');
            }
        }

        ClearIconsOnAllTextEmptyCpt(ix);
    }

    function onUnitChange(ix) {

        var phyunit = $('#PhyUnit_' + ix).val();
        $('#IksUnit_' + ix).val(phyunit);
        var iksunit = $('#IksUnit_' + ix).val();
        var phycpt = $('#PhyCpt_' + ix).val();
        var ikscpt = $('#IksCpt_' + ix).val();
        var PhyMod = $('#PhyMod_' + ix).val();
        var iksmod = $('#IksMod_' + ix).val();
        if (phyunit.length != 0) {
            if ((phycpt.length != 0 || ikscpt.length != 0) && (phycpt == ikscpt)) {
                $('#Cpt_IcdStatus_Green_' + ix).show('slow');
                $('#Cpt_IcdStatus_Red_' + ix).hide('slow');
            }
            else if ((phycpt.length == 0 || ikscpt.length == 0)) {
                $('#Cpt_IcdStatus_Green_' + ix).show('slow');
                $('#Cpt_IcdStatus_Red_' + ix).hide('slow');
            }

            if ((PhyMod.length != 0 && iksmod.length != 0) && (PhyMod != iksmod)) {
                $('#Cpt_IcdStatus_Blue_' + ix).show('slow');
            }
            else {
                $('#Cpt_IcdStatus_Blue_' + ix).hide('slow');
            }
        }
        else {
            if ((phycpt.length != 0 && ikscpt.length != 0) && (phycpt == ikscpt)) {
                $('#Cpt_IcdStatus_Green_' + ix).show('slow');
                $('#Cpt_IcdStatus_Red_' + ix).hide('slow');

                $('#Cpt_' + ix).html('&nbsp;');
                $('#CptReason_' + ix).html('&nbsp;');
            }
            else if ((phycpt.length == 0 && ikscpt.length == 0)) {
                $('#Cpt_IcdStatus_Green_' + ix).hide('slow');
                $('#Cpt_IcdStatus_Red_' + ix).hide('slow');

                $('#Cpt_' + ix).html('&nbsp;');
                $('#CptReason_' + ix).html('&nbsp;');
            }
            else {
                $('#Cpt_IcdStatus_Green_' + ix).hide('slow');
                $('#Cpt_IcdStatus_Red_' + ix).show('slow');
            }
            if ((PhyMod.length != 0 || iksmod.length != 0) && (PhyMod == iksmod)) {
                $('#Cpt_IcdStatus_Blue_' + ix).hide('slow');
            }
            else {
                $('#Cpt_IcdStatus_Blue_' + ix).show('slow');
            }
        }
        ClearIconsOnAllTextEmptyCpt(ix);
    }

    function onModifierChange(ix) {

        var phymod = $('#PhyMod_' + ix).val();
        $('#IksMod_' + ix).val(phymod);
        var iksmod = $('#IksMod_' + ix).val();
        if (phymod.length != 0) {
            var PhyMod_ = $('#PhyMod_' + ix).val();
            var IksMod_ = $('#IksMod_' + ix).val();

            if (PhyMod_ == IksMod_) {            //Change by Rohit
                $('#Modifier_' + ix).html('&nbsp;'); //Change by Rohit
            }

            if ((phymod.length != 0 || iksmod.length != 0) && (phymod == iksmod)) {
                $('#Cpt_IcdStatus_Blue_' + ix).hide('slow');
            }
            else {
                $('#Cpt_IcdStatus_Blue_' + ix).show('slow');
            }
        }
        else {
            $('#Cpt_IcdStatus_Blue_' + ix).hide('slow');
            $('#Modifier_' + ix).html('&nbsp;');
        }

        ClearIconsOnAllTextEmptyCpt(ix);
    }

    //Dropdown Related Task for Cpt
    function OnIksCptChange(ix, notecptcode, notecptreason) {

        var PhyCpt_ = $('#PhyCpt_' + ix).val();
        var IksCpt_ = $('#IksCpt_' + ix).val();

        var PhyMod_ = $('#PhyMod_' + ix).val();
        var IksMod_ = $('#IksMod_' + ix).val();

        var PhyUnit_ = $('#PhyUnit_' + ix).val();
        var IksUnit_ = $('#IksUnit_' + ix).val();
        if (PhyCpt_ != IksCpt_) {

            if (PhyUnit_ != IksUnit_) {

            }
            else {
                if ($('#cpt_' + ix).length == 0) {
                    var x = formCptDropDown(ix, notecptcode, NoteCPTCode_List, 'cpt');
                    $('#Cpt_' + ix).html(x);
                }

                var cptreasonreset = $('#cptreason_' + ix);
                if (cptreasonreset != undefined && cptreasonreset.length != 0) {
                    //$('#cptreason_' + ix).val(0);
                    $('#CptReason_' + ix).html('&nbsp;');
                }
            }

            $('#Cpt_IcdStatus_Green_' + ix).hide('slow');
            $('#Cpt_IcdStatus_Red_' + ix).show('slow');
            if ((PhyMod_.length != 0 || IksMod_.length != 0) && (PhyMod_ != IksMod_)) {
                $('#Cpt_IcdStatus_Blue_' + ix).show('slow');
            }
            else {
                $('#Cpt_IcdStatus_Blue_' + ix).hide('slow');
            }

        }
        else {
            if ((PhyUnit_.length != 0 || IksUnit_.length != 0)) {
                if (PhyUnit_ == IksUnit_) {
                    $('#Cpt_' + ix).html('&nbsp;');
                    $('#CptReason_' + ix).html('&nbsp;');

                    $('#Cpt_IcdStatus_Green_' + ix).show('slow');
                    $('#Cpt_IcdStatus_Red_' + ix).hide('slow');
                }
                else {
                    $('#Cpt_IcdStatus_Red_' + ix).show('slow');
                    $('#Cpt_IcdStatus_Green_' + ix).hide('slow');
                }
            }
            else {
                $('#Cpt_' + ix).html('&nbsp;');
                $('#CptReason_' + ix).html('&nbsp;');

                $('#Cpt_IcdStatus_Green_' + ix).show('slow');
                $('#Cpt_IcdStatus_Red_' + ix).hide('slow');
            }

            if ((PhyMod_.length != 0 || IksMod_.length != 0) && (PhyMod_ != IksMod_)) {
                $('#Cpt_IcdStatus_Blue_' + ix).show('slow');
            }
            else {
                $('#Cpt_IcdStatus_Blue_' + ix).hide('slow');
            }
        }
        ClearIconsOnAllTextEmptyCpt(ix);
    }

    function OnIksUnitChange(ix, notecptcode, notecptreason) {

        var PhyCpt_ = $('#PhyCpt_' + ix).val();
        var IksCpt_ = $('#IksCpt_' + ix).val();

        var PhyMod_ = $('#PhyMod_' + ix).val();
        var IksMod_ = $('#IksMod_' + ix).val();

        var PhyUnit_ = $('#PhyUnit_' + ix).val();
        var IksUnit_ = $('#IksUnit_' + ix).val();

        if (PhyUnit_ != IksUnit_) {
            if ($('#cpt_' + ix).length == 0) {
                var x = formCptDropDown(ix, notecptcode, NoteCPTCode_List, 'cpt');
                $('#Cpt_' + ix).html(x);
            }

            $('#Cpt_IcdStatus_Green_' + ix).hide('slow');
            $('#Cpt_IcdStatus_Red_' + ix).show('slow');

            if ((PhyMod_.length != 0 || IksMod_.length != 0) && (PhyMod_ != IksMod_)) {
                $('#Cpt_IcdStatus_Blue_' + ix).show('slow');
            }
            else {
                $('#Cpt_IcdStatus_Blue_' + ix).hide('slow');
            }
        }
        else {
            if ((PhyCpt_.length != 0 || IksCpt_.length != 0) && (PhyCpt_ == IksCpt_)) {
                $('#Cpt_' + ix).html('&nbsp;');
                $('#CptReason_' + ix).html('&nbsp;');

                $('#Cpt_IcdStatus_Green_' + ix).show('slow');
                $('#Cpt_IcdStatus_Red_' + ix).hide('slow');

            }
            else if ((PhyCpt_.length != 0 || IksCpt_.length != 0) && (PhyCpt_ != IksCpt_)) {
                $('#Cpt_IcdStatus_Green_' + ix).hide('slow');
                $('#Cpt_IcdStatus_Red_' + ix).show('slow');
            }
            else if (PhyCpt_.length == 0 && IksCpt_.length == 0) {
                $('#Cpt_IcdStatus_Green_' + ix).hide('slow');
                $('#Cpt_IcdStatus_Red_' + ix).hide('slow');

                $('#Cpt_' + ix).html('&nbsp;');
                $('#CptReason_' + ix).html('&nbsp;');
            }

            if ((PhyMod_.length != 0 || IksMod_.length != 0) && (PhyMod_ != IksMod_)) {
                $('#Cpt_IcdStatus_Blue_' + ix).show('slow');
            }
            else {
                $('#Cpt_IcdStatus_Blue_' + ix).hide('slow');
            }
        }
        ClearIconsOnAllTextEmptyCpt(ix);
    }

    function OnIksModifierChange(ix, notemodifier) {

        var PhyCpt_ = $('#PhyCpt_' + ix).val();
        var IksCpt_ = $('#IksCpt_' + ix).val();

        var PhyUnit_ = $('#PhyUnit_' + ix).val();
        var IksUnit_ = $('#IksUnit_' + ix).val();

        var PhyMod_ = $('#PhyMod_' + ix).val();
        var IksMod_ = $('#IksMod_' + ix).val();
        if (PhyMod_ != IksMod_) {
            var x = formCptDropDown(ix, notemodifier, NoteModifiere_List, 'mod');
            $('#Modifier_' + ix).html(x);

            if ((PhyCpt_ != IksCpt_) || (PhyUnit_ != IksUnit_)) {
                $('#Cpt_IcdStatus_Red_' + ix).show('slow');
                $('#Cpt_IcdStatus_Green_' + ix).hide('slow');
            }
            else {
                $('#Cpt_IcdStatus_Red_' + ix).hide('slow');
                $('#Cpt_IcdStatus_Green_' + ix).show('slow');
            }

            $('#Cpt_IcdStatus_Blue_' + ix).show('slow');

        }
        else {
            $('#Modifier_' + ix).html('&nbsp;');

            if ((PhyCpt_ != IksCpt_) || (PhyUnit_ != IksUnit_)) {
                $('#Cpt_IcdStatus_Red_' + ix).show('slow');
                $('#Cpt_IcdStatus_Green_' + ix).hide('slow');
            }
            else {
                $('#Cpt_IcdStatus_Red_' + ix).hide('slow');
                $('#Cpt_IcdStatus_Green_' + ix).show('slow');
            }

            $('#Cpt_IcdStatus_Blue_' + ix).hide('slow');
        }
        ClearIconsOnAllTextEmptyCpt(ix);
    }

    //Primary -->> Icd Level Functions
    function FormPrimaryDiv(icdinfo, ix) {

        if (icdinfo) {
            var firsthcc = "";
            var checkHccX = CheckHcc(icdinfo.PhySelectedICD);
            var checkHccY = CheckHcc(icdinfo.IKSSelectedICD);
            if (checkHccX.Result == true && checkHccY.Result == true) {
                icdinfo.IsHCC = 1;
            }
            else {
                icdinfo.IsHCC = 0;
            }
        }

        let primaryIcdHtml = '';
        let primaryDiv = '';
        //let primaryDiv = '<div class="header">Primary Diagnosis</div>';
        //let primaryHeader = '<div class="col12"> <div class="col12 inline icdblock"><div class="col12 PrimaryHeading" ><label class="PrimaryHeadingLabel">PrimaryDiagnosis</label></div><div id="divPrimaryIcdCodeHeader" class="inline icdblock headerNew fl width100"> <div class= "ICDColumn">Prov ICD</div><div class="ICDColumn">Iks ICD</div><div class="ICDIconColumn"></div><div class="NoteColumn">Notes</div><div class="HCCSourceColumn">Source Of HCC</div><div class="QueryColumn">Query</div></div>';
        let primaryHeader = '<div class="col12">';
        primaryHeader += '<div class="col12 inline icdblock">';
        primaryHeader += '<div class="col12 PrimaryHeading" ><label class="PrimaryHeadingLabel">Primary Diagnosis</label></div>';
        primaryHeader += '<table>';
        primaryHeader += '<thead>';
        primaryHeader += '<tr>';
        primaryHeader += '<th class="headerNew ICDColumn ">Prov ICD</th>';
        primaryHeader += '<th class="headerNew ICDColumn">Iks ICD</th>';
        primaryHeader += '<th class="headerNew ICDIconColumn"></th>';
        primaryHeader += '<th class="headerNew NoteColumn">Notes</th>';
        primaryHeader += '<th class="headerNew HCCSourceColumn">Source of HCC</th>';
        primaryHeader += '<th class="headerNew QueryColumn">Query</th>';
        primaryHeader += '</tr>';
        primaryHeader += '</thead>';
        let primaryData = '';
        //primaryData += '<div class="cptcodeblk">';
        if (icdinfo) {
            primaryData += '<tr>';
            primaryData += '<td>';
            primaryData += '<input type="text" maxlength="9" class="margintop5 ICDTextWidth ui-autocomplete-input inputx" id="Primary_ProvIcd_' + ix + '" value="' +

icdinfo.PhySelectedICD + '" onchange="onPrimaryProvIcdChanged(' + ix + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + ' />';
            primaryData += '</td>';
            primaryData += '<td>';
            primaryData += '<input type="text" maxlength="9" class="margintop5 ICDTextWidth ui-autocomplete-input inputx" id="Primary_IksIcd_' + ix + '" value="' +

icdinfo.IKSSelectedICD + '" onchange="onPrimaryIksIcdChanged(' + ix + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
            primaryData += '</td>';
            primaryData += '<td>';
            primaryData += '<div id="Primary_Icd_HCC_' + ix + '" class="statusindi hcc" style="display:' + (icdinfo.IsHCC == 1 ? 'block' : 'none') + '"></div>';
            primaryData += '<div id="Primary_IcdStatus_Green_' + ix + '" class="statusindi grn" style="display:' + ((icdinfo.PhySelectedICD.length > 0 &&

icdinfo.IKSSelectedICD.length > 0) && (icdinfo.PhySelectedICD == icdinfo.IKSSelectedICD) ? 'block' : 'none') + ';vertical-align: top;"></div>';
            primaryData += '<div id="Primary_IcdStatus_Blue_' + ix + '" class="statusindi blue" style="display:none; vertical-align: top;"></div>';
            primaryData += '<div id="Primary_IcdStatus_Red_' + ix + '" class="statusindi red1" style="display:' + ((icdinfo.PhySelectedICD.length > 0 &&

icdinfo.IKSSelectedICD.length > 0) && (icdinfo.PhySelectedICD != icdinfo.IKSSelectedICD) ? 'block' : 'none') + ';vertical-align: top;"></div>';
            primaryData += '</td>';
            primaryData += '<td>';
            primaryData += '<div id="Primary_Notes_' + ix + '">' +
                //(icdinfo.Notes > 0 ? (PrimaryformIcdDropDown(Notes_List, icdinfo.Notes, ix)) : '') + ' ' +
                //(icdinfo.Notes == 9999 ? (PrimaryNotesDropdownChange(ix + '$__$' + icdinfo.OtherNotes)) : '') +

                //(((icdinfo.PhySelectedICD.length != 0 && icdinfo.IKSSelectedICD.length != 0) && (icdinfo.PhySelectedICD != icdinfo.IKSSelectedICD) && icdinfo.Notes==0)?
            //(PrimaryformIcdDropDown(Notes_List, icdinfo.Notes, ix)) :
            //'')
            FormingNotesCase(icdinfo, Notes_List, ix, undefined, undefined, 'primary')

            '</div>';
            primaryData += '</td>';
            primaryData += '<td>';
            //primaryData += '<div id="Primary_Hcc_' + ix + '">' + (icdinfo.HCCSource_Id > 0 ? (PrimaryHCCSourceDropdown(HCCSource_List, icdinfo.HCCSource_Id, ix)) :'') + ' ' + (icdinfo.HCCSource_Id == 9999 ? (PrimaryHccDropdownChange(ix + '$__$' + icdinfo.HCCSourceNotes)) : '') + '</div>';
            primaryData += '<div id="Primary_Hcc_' + ix + '">' +
                //(icdinfo.HCCSource_Id > 0 ? (PrimaryHCCSourceDropdown(HCCSource_List, icdinfo.HCCSource_Id, ix)) : '')
                //+ ' ' +
                //(icdinfo.HCCSource_Id > 0 && icdinfo.HCCSourceNotes.length > 0 ? (PrimaryHccDropdownChange(ix + '$__$' + icdinfo.HCCSourceNotes)) : '') +

                //((icdinfo.IsHCC == true && icdinfo.HCCSource_Id==0)?
                //PrimaryHCCSourceDropdown(HCCSource_List, icdinfo.HCCSource_Id, ix) :
                //'') +

                //((icdinfo.IsHCC == true && icdinfo.HCCSource_Id > 0 && icdinfo.HCCSourceNotes.length == 0) ?
                //(PrimaryHccDropdownChange(ix + '$__$' + icdinfo.HCCSourceNotes)):
                //'')

                FormingHccCase(icdinfo, HCCSource_List, ix, undefined, undefined, 'primary')


                + '</div>';
            primaryData += '</td>';
            primaryData += '<td style="text-align: center!important;">';
            primaryData += '<input type="text" class="margintop5 inputx" id="Primary_Query_' + ix + '" value="' + icdinfo.Query + '"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
            primaryData += '</td>';
            primaryData += '</tr>';
        }
        else {
            primaryData += '<tr>';
            primaryData += '<td>';
            primaryData += '<input type="text" maxlength="9" class="margintop5 ICDTextWidth ui-autocomplete-input inputx" id="Primary_ProvIcd_' + ix + '" value="" onchange="onPrimaryProvIcdChanged(' + ix + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
            primaryData += '</td>';
            primaryData += '<td>';
            primaryData += '<input type="text" maxlength="9" class="margintop5 ICDTextWidth ui-autocomplete-input inputx" id="Primary_IksIcd_' + ix + '" value="" onchange="onPrimaryIksIcdChanged(' + ix + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
            primaryData += '</td>';
            primaryData += '<td>';
            primaryData += '<div id="Primary_Icd_HCC_' + ix + '" class="statusindi hcc" style="display:none"></div>';
            primaryData += '<div id="Primary_IcdStatus_Green_' + ix + '" class="statusindi grn" style="display:none; vertical-align: top;"></div>';
            primaryData += '<div id="Primary_IcdStatus_Blue_' + ix + '" class="statusindi blue" style="display:none; vertical-align: top;"></div>';
            primaryData += '<div id="Primary_IcdStatus_Red_' + ix + '" class="statusindi red1" style="display:none; vertical-align: top;"></div>';
            primaryData += '</td>';
            primaryData += '<td><div id="Primary_Notes_' + ix + '">&nbsp;</div></td>';
            primaryData += '<td><div id="Primary_Hcc_' + ix + '">&nbsp;</div></td>';
            primaryData += '<td style="text-align: center!important;"><input type="text" class="margintop5 inputx" id="Primary_Query_' + ix + '" value=""' +

(isCodingCompleted == true ? 'disabled="true"' : '') + '></td>';
            primaryData += '</tr>';
        }
        //primaryData += '</div></div></div>';
        //primaryIcdHtml += primaryDiv + primaryHeader + primaryData
        primaryIcdHtml += primaryDiv + primaryHeader + primaryData + '</table></div></div>';
        return primaryIcdHtml;
    }

    function onPrimaryProvIcdChanged(ix) {

        var primaryProvIcd = $('#Primary_ProvIcd_' + ix).val();
        if (primaryProvIcd.trim().length != 0) {
            $('#Primary_IksIcd_' + ix).val(primaryProvIcd);
            var hcc = CheckHcc(primaryProvIcd);
            if (hcc.Result == true) {
                $('#Primary_Icd_HCC_' + ix).show('slow');
                $('#Primary_IcdStatus_Green_' + ix).show('slow');

                //$('#Primary_Notes' + ix).empty();
                //$('#txt_Primary_Notes' + ix).empty();
                $('#Primary_Notes_' + ix).html('&nbsp;');

                $('#Primary_ProvIcd_' + ix).attr('title', hcc.HccDesc);
                $('#Primary_IksIcd_' + ix).attr('title', hcc.HccDesc);

                var d = PrimaryHCCSourceDropdown(HCCSource_List, undefined, ix);
                $('#Primary_Hcc_' + ix).html(d);
            }
            else {
                $('#Primary_IcdStatus_Green_' + ix).show('slow');
                $('#Primary_Icd_HCC_' + ix).hide('slow');

                $('#Primary_Hcc' + ix).empty();
                $('#txt_Primary_Hcc' + ix).empty();

                $('#Primary_Notes_' + ix).html('&nbsp;');

                $('#Primary_IcdStatus_Green_' + ix).show('slow');
                $('#Primary_IcdStatus_Red_' + ix).hide('slow');

                $('#Primary_ProvIcd_' + ix).attr('title', hcc.HccDesc);
                $('#Primary_IksIcd_' + ix).attr('title', hcc.HccDesc);
            }

        }
        else {
            $('#Primary_IksIcd_' + ix).val(primaryProvIcd);
            $('#Primary_Notes' + ix).remove();
            $('#txt_Primary_Notes' + ix).remove();
            $('#Primary_Hcc' + ix).remove();
            $('#txt_Primary_Hcc' + ix).remove();

            $('#Primary_IcdStatus_Green_' + ix).hide('slow');
            $('#Primary_Icd_HCC_' + ix).hide('slow');
            $('#Primary_IcdStatus_Blue_' + ix).hide('slow');
            $('#Primary_IcdStatus_Red_' + ix).hide('slow');

            $('#Primary_ProvIcd_' + ix).attr('title', hcc.HccDesc);
            $('#Primary_IksIcd_' + ix).attr('title', hcc.HccDesc);
        }
    }

    //Dropdown Related Task for Primary ICD
    function onPrimaryIksIcdChanged(ix) {

        var Primary_ProvIcd_ = $('#Primary_ProvIcd_' + ix).val();
        var Primary_IksIcd_ = $('#Primary_IksIcd_' + ix).val();

        var Provhcc = CheckHcc(Primary_ProvIcd_);
        var Ikshcc = CheckHcc(Primary_IksIcd_);
        if (Primary_ProvIcd_.trim().length != 0 && Primary_IksIcd_.trim().length != 0) {
            if (Primary_ProvIcd_ == Primary_IksIcd_) {

                if (Provhcc.Result == true && Ikshcc.Result == true) {
                    //Hcc SourceDropdown
                    $('#Primary_Notes_' + ix).empty();

                    var d = PrimaryHCCSourceDropdown(HCCSource_List, undefined, ix);
                    $('#Primary_Hcc_' + ix).html(d);

                    //if matching Hcc then green and hcc
                    $('#Primary_IcdStatus_Green_' + ix).show('slow');
                    $('#Primary_IcdStatus_Blue_' + ix).hide('slow');
                    $('#Primary_IcdStatus_Red_' + ix).hide('slow');
                    $('#Primary_Icd_HCC_' + ix).show('slow');

                    //setting icd desc as tooltip
                    $('#Primary_IksIcd_' + ix).attr('title', Ikshcc.HccDesc);
                }
                else {
                    //Notes Dropdown
                    var d = PrimaryformIcdDropDown(Notes_List, undefined, ix);
                    $('#Primary_Notes_' + ix).html(d);

                    //if matching icds but not hcc then green
                    $('#Primary_IcdStatus_Green_' + ix).show('slow');
                    $('#Primary_IcdStatus_Blue_' + ix).hide('slow');
                    $('#Primary_IcdStatus_Red_' + ix).hide('slow');
                    $('#Primary_Icd_HCC_' + ix).hide('slow');
                }

            }
            else {

                if (Provhcc.Result == true && Ikshcc.Result == true) {

                    //HCC Dropdown
                    $('#Primary_Notes_' + ix).empty();
                    $('#txt_Primary_Notes' + ix).empty();

                    var d = PrimaryHCCSourceDropdown(HCCSource_List, undefined, ix);
                    $('#Primary_Hcc_' + ix).html(d);


                    var d = PrimaryformIcdDropDown(Notes_List, undefined, ix);
                    $('#Primary_Notes_' + ix).html(d);

                    $('#Primary_IcdStatus_Green_' + ix).hide('slow');
                    $('#Primary_IcdStatus_Blue_' + ix).hide('slow');
                    $('#Primary_IcdStatus_Red_' + ix).show('slow');
                    $('#Primary_Icd_HCC_' + ix).show('slow');
                }
                else {

                    $('#Primary_Hcc_' + ix).empty();

                    var d = PrimaryformIcdDropDown(Notes_List, undefined, ix);
                    $('#Primary_Notes_' + ix).html(d);

                    // if non matching icds,then red
                    $('#Primary_IcdStatus_Green_' + ix).hide('slow');
                    $('#Primary_IcdStatus_Blue_' + ix).hide('slow');
                    $('#Primary_IcdStatus_Red_' + ix).show('slow');
                    $('#Primary_Icd_HCC_' + ix).hide('slow');
                }
            }
        }
    }

    //Secondary -->> ICD Level Functions
    function FormSecondaryTable(icdinfo, ix, i) {

        if (icdinfo) {
            var firsthcc = "";
            var checkHccX = CheckHcc(icdinfo.PhySelectedICD);
            var checkHccY = CheckHcc(icdinfo.IKSSelectedICD);
            if (checkHccX.Result == true && checkHccY.Result == true) {
                icdinfo.IsHCC = 1;
            }
            else {
                icdinfo.IsHCC = 0;
            }
        }


        let secondaryIcdHtml = '';
        let secondaryData = '';
        //secondaryData += '<tbody>';
        if (icdinfo) {

            secondaryData += '<tr>';
            secondaryData += '<td><input type="text" maxlength="9" class="margintop5 ICDTextWidth" id="Secondary_ProvIcd_' + ix + '_' + i + '" value="' +

icdinfo.PhySelectedICD + '" onchange="onSecondaryProvIcdChanged(' + ix + ',' + i + ',this)"/' + (isCodingCompleted == true ? 'disabled="true"' : '') + '></td>';
            secondaryData += '<td><input type="text" maxlength="9" class="margintop5 ICDTextWidth" id="Secondary_IksIcd_' + ix + '_' + i + '" value="' +

icdinfo.IKSSelectedICD + '" onchange="onSecondaryIksIcdChanged(' + ix + ',' + i + ',this)"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></td>';
            secondaryData += '<td>';
            secondaryData += '<div id="Secondary_Icd_HCC_' + ix + '_' + i + '" class="statusindi hcc" style="display:' + (icdinfo.IsHCC == 1 ? 'block' : 'none') +

'"></div>';
            secondaryData += ' <div id="IcdStatus_Green_' + ix + '_' + i + '" class="statusindi grn" style="display:' + (((icdinfo.PhySelectedICD.length != 0 &&

icdinfo.IKSSelectedICD.length != 0) && (icdinfo.PhySelectedICD.trim() == icdinfo.IKSSelectedICD.trim())) ? 'block' : 'none') + '; vertical-align: top;"></div>';
            secondaryData += '<div id="IcdStatus_Blue_' + ix + '_' + i + '" class="statusindi blue" style="display:none; vertical-align: top;"></div>';
            secondaryData += '<div id="IcdStatus_Red_' + ix + '_' + i + '" class="statusindi red1" style="display:' + ((icdinfo.PhySelectedICD.trim() !=

icdinfo.IKSSelectedICD.trim()) ? 'block' : 'none') + '; vertical-align: top;"></div></td>';
            secondaryData += '<td><div id="Secondary_Notes_' + ix + '_' + i + '">' +

               //((icdinfo.Notes > 0)
               //? (formIcdDropDown(Notes_List, icdinfo.Notes, ix, i))
               //: '')
               //+ '' +

               //((icdinfo.Notes == 9999)
               //? NotesDropdownChange(ix, i + '$__$' + icdinfo.OtherNotes)
               //: '')+

               //(((icdinfo.PhySelectedICD.length != 0 && icdinfo.IKSSelectedICD.length != 0) && (icdinfo.PhySelectedICD != icdinfo.IKSSelectedICD) && icdinfo.Notes ==0) ?
            // (formIcdDropDown(Notes_List, icdinfo.Notes, ix, i)):
            // '')
            FormingNotesCase(icdinfo, Notes_List, ix, i, undefined, 'secondary')


            //+ (icdinfo.Notes > 0 ? (formIcdDropDown(Notes_List, icdinfo.Notes, ix, i)) : '') + '' + (icdinfo.Notes == 9999 ? (NotesDropdownChange(ix, i + '$__$'+ icdinfo.OtherNotes)) : '') +
            // + '</div>&nbsp;</div></td>';
                + '&nbsp;</div></td>';
            secondaryData += '<td><div id="Secondary_HccSource_' + ix + '_' + i + '">' +
            //    ((icdinfo.HCCSource_Id > 0)
            //   ? (HCCSourceDropdown(HCCSource_List, icdinfo.HCCSource_Id, ix, i))
            //   : '')
            //   + '' +

            //   ((icdinfo.HCCSource_Id > 0 && icdinfo.HCCSourceNotes.length !=0)
            //   ? HccDropdownChange(ix, i + '$__$' + icdinfo.HCCSourceNotes)
            //   : '')+''+


            //    ((icdinfo.IsHCC == true && icdinfo.HCCSource_Id == 0) ?
            //     (HCCSourceDropdown(HCCSource_List, icdinfo.HCCSource_Id, ix, i)):
            //    '') +

            //    ((icdinfo.IsHCC == true && icdinfo.HCCSource_Id > 0 && icdinfo.HCCSourceNotes.length == 0) ?
            //        HccDropdownChange(ix, i + '$__$' + icdinfo.HCCSourceNotes):
            //    '')

            FormingHccCase(icdinfo, HCCSource_List, ix, i, undefined, 'secondary')
                //(icdinfo.HCCSource_Id > 0 ? (HCCSourceDropdown(HCCSource_List, icdinfo.HCCSource_Id, ix, i)) : '') + '' + (icdinfo.HCCSource_Id == 9999 ?(HccDropdownChange(ix, i + '$__$' + HCCSourceNotes)) : '')
            // + '</div>&nbsp;</div></td>';
            + '&nbsp;</div></td>';
            secondaryData += '<td style="text-align: center!important;"><input type="text"  maxlength="300" class="margintop5 inputx" id="Secondary_Query_' + ix + '_' + i + '" value="' + icdinfo.Query + '"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '></td>';
            secondaryData += '<td><input type="button" class="btnPlus" onclick="AddNewICD(' + ix + ',this)" value="+"' + (isCodingCompleted == true ? 'disabled="true"' :

'') + '/><input type="button"  class="btnMinus" value="-" onclick="RemoveICD(this)"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></td>';
        }
        else {
            secondaryData += '<tr>';
            secondaryData += '<td><input type="text" maxlength="9" class="margintop5 ICDTextWidth inputx" id="Secondary_ProvIcd_' + ix + '_' + i + '" value="" onchange="onSecondaryProvIcdChanged(' + ix + ',' + i + ',this)"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></td>';
            secondaryData += '<td><input type="text" maxlength="9" class="margintop5 ICDTextWidth inputx" id="Secondary_IksIcd_' + ix + '_' + i + '" value="" onchange="onSecondaryIksIcdChanged(' + ix + ',' + i + ',this)"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></td>';
            secondaryData += '<td>';
            secondaryData += '<div id="Secondary_Icd_HCC_' + ix + '_' + i + '" class="statusindi hcc" style="display:none"></div>';
            secondaryData += '<div id="IcdStatus_Green_' + ix + '_' + i + '" class="statusindi grn" style="display:none; vertical-align: top;"></div>';
            secondaryData += '<div id="IcdStatus_Blue_' + ix + '_' + i + '" class="statusindi blue" style="display:none; vertical-align: top;"></div>';
            secondaryData += '<div id="IcdStatus_Red_' + ix + '_' + i + '" class="statusindi red1" style="display:none; vertical-align: top;"></div></td>';
            secondaryData += '<td><div id="Secondary_Notes_' + ix + '_' + i + '"></div></td>';
            secondaryData += '<td><div id="Secondary_HccSource_' + ix + '_' + i + '"></div></td>';
            secondaryData += '<td style="text-align: center!important;"><input type="text"  maxlength="300" class="margintop5 inputx" id="Secondary_Query_' + ix + '_' + i + '" value=""' + (isCodingCompleted == true ? 'disabled="true"' : '') + '></td>';
            secondaryData += '<td><input type="button" onclick="AddNewICD(' + ix + ',this)" class="btnPlus" value="+" ' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/><input type="button" class="btnMinus" value="-" onclick="RemoveICD(this)"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></td>';
        }
        secondaryData += '</tr>';
        //secondaryData += '</tbody>';

        secondaryIcdHtml += secondaryData;
        return secondaryIcdHtml;
    }

    function onSecondaryProvIcdChanged(ix, i, a) {

        var prov_icd = $('#Secondary_ProvIcd_' + ix + '_' + i).val();
        if (prov_icd.trim().length != 0) {
            var hcc = CheckHcc(prov_icd);
            $('#Secondary_IksIcd_' + ix + '_' + i).val(prov_icd);
            if (hcc.Result == true) {
                $('#Secondary_Icd_HCC_' + ix + '_' + i).show('slow');
                $('#IcdStatus_Green_' + ix + '_' + i).show('slow');

                $('#Secondary_Notes' + ix + '_' + i).remove();
                $('#txt_Secondary_Notes_' + ix + '_' + i).remove();


                var d = HCCSourceDropdown(HCCSource_List, undefined, ix, i);
                $('#Secondary_HccSource_' + ix + '_' + i).html(d);
            }
            else {
                $('#IcdStatus_Green_' + ix + '_' + i).show('slow');
                $('#Secondary_Icd_HCC_' + ix + '_' + i).hide('slow');

                $('#Secondary_Hcc' + ix + '_' + i).remove();
                $('#txt_hcc_' + ix + '_' + i).remove();

                $('#Secondary_Notes_' + ix + '_' + i).html('&nbsp;');
                $('#IcdStatus_Green_' + ix + '_' + i).show('slow');
            }
            $('#IcdStatus_Blue_' + ix + '_' + i).hide('slow');
            $('#IcdStatus_Red_' + ix + '_' + i).hide('slow');
        }
        else {
            $('#Secondary_IksIcd_' + ix + '_' + i).val(prov_icd);
            $('#Secondary_Hcc' + ix + '_' + i).remove();
            //$('#Secondary_Query_' + ix + '_' + i).remove();
            $('#Secondary_Notes_' + ix + '_' + i).remove();
            $('#txt_Secondary_Notes_' + ix + '_' + i).remove();


            $('#Secondary_Hcc' + ix + '_' + i).remove();
            $('#txt_hcc_' + ix + '_' + i).remove();

            $('#IcdStatus_Blue_' + ix + '_' + i).hide('slow');
            $('#IcdStatus_Red_' + ix + '_' + i).hide('slow');
            $('#Secondary_Icd_HCC_' + ix + '_' + i).hide('slow');
            $('#IcdStatus_Green_' + ix + '_' + i).hide('slow');
        }

        $('#Secondary_ProvIcd_' + ix + '_' + i).attr('title', hcc.HccDesc);
        $('#Secondary_IksIcd_' + ix + '_' + i).attr('title', hcc.HccDesc);
    }

    //Dropdown Related Task for Secondary ICD
    function onSecondaryIksIcdChanged(ix, i, a) {
        var Primary_ProvIcd_ = $('#Secondary_ProvIcd_' + ix + '_' + i).val();
        var Primary_IksIcd_ = $('#Secondary_IksIcd_' + ix + '_' + i).val();
        if (Primary_ProvIcd_.trim().length != 0 && Primary_IksIcd_.trim().length != 0) {
            var Provhcc = CheckHcc(Primary_ProvIcd_);
            var Ikshcc = CheckHcc(Primary_IksIcd_);
            if (Primary_ProvIcd_ == Primary_IksIcd_) {

                if (Provhcc.Result == true && Ikshcc.Result == true) {
                    //Hcc SourceDropdown
                    $('#Secondary_Notes' + ix + '_' + i).remove();
                    $('#txt_Secondary_Notes_' + ix + '_' + i).remove();

                    var d = HCCSourceDropdown(HCCSource_List, undefined, ix, i);
                    $('#Secondary_HccSource_' + ix + '_' + i).html(d);

                    //if matching Hcc then green and hcc
                    $('#Secondary_Icd_HCC_' + ix + '_' + i).show('slow');
                    $('#IcdStatus_Green_' + ix + '_' + i).show('slow');
                    $('#IcdStatus_Blue_' + ix + '_' + i).hide('slow');
                    $('#IcdStatus_Red_' + ix + '_' + i).hide('slow');

                    //setting icd desc as tooltip
                    $('#Secondary_IksIcd_' + ix + '_' + i).attr('title', Ikshcc.HccDesc);
                }
                else {
                    //Notes Dropdown
                    //var d = formIcdDropDown(Notes_List, undefined, ix, i);
                    //$('#Secondary_Notes_' + ix + '_' + i).html(d);

                    var d = $('#Secondary_Notes' + ix + '_' + i);
                    if (d != undefined && d.length > 0) {
                        $('#Secondary_Notes_' + ix + '_' + i).html('&nbsp;');
                    }

                    //if matching icds but not hcc then green
                    $('#Secondary_Icd_HCC_' + ix + '_' + i).hide('slow');
                    $('#IcdStatus_Green_' + ix + '_' + i).show('slow');
                    $('#IcdStatus_Blue_' + ix + '_' + i).hide('slow');
                    $('#IcdStatus_Red_' + ix + '_' + i).hide('slow');
                }

            }
            else {
                if (Provhcc.Result == true && Ikshcc.Result == true) {

                    $('#Secondary_Notes' + ix + '_' + i).remove();
                    $('#txt_Secondary_Notes_' + ix + '_' + i).remove();

                    var d = HCCSourceDropdown(HCCSource_List, undefined, ix, i);
                    $('#Secondary_HccSource_' + ix + '_' + i).html(d);

                    //if matching Hcc then green and hcc
                    $('#Secondary_Icd_HCC_' + ix + '_' + i).show('slow');
                    $('#IcdStatus_Green_' + ix + '_' + i).hide('slow');
                    $('#IcdStatus_Blue_' + ix + '_' + i).hide('slow');
                    $('#IcdStatus_Red_' + ix + '_' + i).show('slow');

                    //setting icd desc as tooltip
                    $('#Secondary_IksIcd_' + ix + '_' + i).attr('title', Ikshcc.HccDesc);

                    var d = formIcdDropDown(Notes_List, undefined, ix, i);
                    $('#Secondary_Notes_' + ix + '_' + i).html(d);
                }
                else {
                    $('#Secondary_Hcc' + ix + '_' + i).remove();
                    $('#txt_hcc_' + ix + '_' + i).remove();

                    var d = formIcdDropDown(Notes_List, undefined, ix, i);
                    $('#Secondary_Notes_' + ix + '_' + i).html(d);

                    // if non matching icds,then red
                    $('#Secondary_Icd_HCC_' + ix + '_' + i).hide('slow');
                    $('#IcdStatus_Green_' + ix + '_' + i).hide('slow');
                    $('#IcdStatus_Blue_' + ix + '_' + i).hide('slow');
                    $('#IcdStatus_Red_' + ix + '_' + i).show('slow');
                }
            }
        }
    }

    //Adding and Removing New Secondary icd
    function AddNewICD(ix, a) {
        debugger;
        var newRow = '';
        var trs = $('#tbl_SecondaryICd_' + ix + ' tr');
        var drs = $(trs).find('td:first-child').find('input');
        var icdids = Array.from(drs, function (d) {
            var idtrack = d.id.split('_')
            return idtrack[idtrack.length - 1];
        });
        var RevIds = icdids.sort();
        var maxId = RevIds[RevIds.length - 1];
        newRow = formNewlyAddedRow(ix, parseInt(maxId) + 1);

        var row = $(a).closest('tr')[0];
        var nextRow = $(row).next();
        if (nextRow.length != 0) {
            $(row).after(newRow);
        }
        else {
            $('#tbl_SecondaryICd_' + ix).append(newRow);
        }
        QueryHoverEventBinder();
    }

    function formNewlyAddedRow(ix, len) {
        var newRow = '<tr>';
        newRow += '<td><input type="text" maxlength="9" class="margintop5 ICDTextWidth ui-autocomplete-input inputx" id="Secondary_ProvIcd_' + ix + '_' + len + '" value="" onchange="onSecondaryProvIcdChanged(' + ix + ',' + len + ',this)"/></td>';
        newRow += '<td><input type="text" maxlength="9" class="margintop5 ICDTextWidth ui-autocomplete-input inputx" id="Secondary_IksIcd_' + ix + '_' + len + '" value="" onchange="onSecondaryIksIcdChanged(' + ix + ',' + len + ',this)"/></td>';
        newRow += '<td>';
        newRow += '<div id="Secondary_Icd_HCC_' + ix + '_' + len + '" class="statusindi hcc" style="display:none"></div>'
        newRow += '<div id="IcdStatus_Green_' + ix + '_' + len + '" class="statusindi grn" style="display:none; vertical-align: top;"></div>';
        newRow += '<div id="IcdStatus_Blue_' + ix + '_' + len + '" class="statusindi blue" style="display:none; vertical-align: top;"></div>';
        newRow += '<div id="IcdStatus_Red_' + ix + '_' + len + '" class="statusindi red1" style="display:none; vertical-align: top;"></div></td>';
        newRow += '<td><div id="Secondary_Notes_' + ix + '_' + len + '"></td>';
        newRow += '<td><div id="Secondary_HccSource_' + ix + '_' + len + '"></div></td>';
        newRow += '<td style="text-align: center!important;"><input type="text" class="margintop5 inputx" id="Secondary_Query_' + ix + '_' + len + '" value=""/></td>';
        newRow += '<td><input type="button"  class="btnPlus" onclick="AddNewICD(' + ix + ',this)" value="+"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/><input type="button"  class="btnMinus" value="-" onclick="RemoveICD(this)"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></td>';
        newRow += '</tr>';
        return newRow;
    }

    function RemoveICD(re) {

        var table = re.closest('tr').closest('table');
        var seTable = $(table);
        var tableId = seTable[0].id;
        var rows = $('#' + tableId).find('tr')
        if (rows.length > 2) {
            $(re).closest('tr').remove();
            QueryHoverEventBinder();
            return;
        }
        else {
            if (confirm('Please click OK to clear data')) {
                var childrens = $(rows[1]).children();
                for (var j = 0; j < childrens.length; j++) {
                    if (childrens[j].children.length <= 2) {
                        if (childrens[j].children[0] != undefined && childrens[j].children[0].tagName == "INPUT") {
                            var id = childrens[j].children[0].id;
                            $('#' + id).val("");
                        }
                        else if (childrens[j].children[1] != undefined && childrens[j].children[1].tagName == "INPUT") {
                            if (childrens[j].children[1] != undefined && childrens[j].children[1].id != undefined) {
                                var id = childrens[j].children[1].id;
                                $('#' + id).val("");
                            }
                        }
                        else if (childrens[j].children[0] != undefined && childrens[j].children[0].tagName == "DIV") {
                            var id = childrens[j].children[0].id;
                            $('#' + id).html('&nbsp');
                        }
                    }
                    else if (childrens[j].children.length > 2) {
                        var chix = childrens[j].children;
                        for (var i = 0; i < chix.length; i++) {
                            if (chix[i].tagName == "DIV") {
                                if (chix[i].style != undefined && chix[i].style.display != undefined) {
                                    chix[i].style.display = "none";
                                }
                            }
                        }
                    }
                }
                QueryHoverEventBinder();
            }
            else {
                QueryHoverEventBinder();
                return;
            }
        }

    }

    //Cpt Dropdown
    function formCptDropDown(ix, selected, source, seperator) {
        let dropdown = '';
        if (seperator == 'cpt') {
            dropdown = '<select class="cptReason" id="cpt_' + ix + '"  onchange="GetCptReasons(' + ix + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') +

'>';
        }
        else {
            dropdown = '<select class="cptModifier" id="modifier_' + ix + '"  onchange="ModifiersChanged(' + ix + ')"' + (isCodingCompleted == true ? 'disabled="true"'

: '') + '>';
        }
        for (var i = 0; i < source.length; i++) {
            if (source[i].id == selected) {
                dropdown += '<option value=' + source[i].id + ' selected>' + source[i].Description;
            }
            else {
                dropdown += '<option value=' + source[i].id + '>' + source[i].Description;
            }

            dropdown += '</option>';
        }
        dropdown += '</select>';
        return dropdown;
    }

    //Secondary Icd Dropdown
    function formIcdDropDown(source, selected, cpt, icd) {
        //icd dropdownId =Secondary_FieldName_cptid_icd
        var icdDropdown = '<select id="Secondary_Notes' + cpt + '_' + icd + '" onchange="NotesDropdownChange(' + cpt + ',' + icd + ')"' + (isCodingCompleted == true ?

'disabled="true"' : '') + '>';
        //icdDropdown += '<option>select</option>';
        for (var i = 0; i < source.length; i++) {
            if (source[i].id == selected) {
                icdDropdown += '<option value="' + source[i].id + '" selected>' + source[i].Description;
            }
            else {
                icdDropdown += '<option value="' + source[i].id + '">' + source[i].Description;
            }
            icdDropdown += '</option>';
        }
        icdDropdown += '</select>';
        return icdDropdown;
    }

    function HCCSourceDropdown(source, selected, cpt, icd) {
        var icdDropdown = '<select style="width:199px;" id="Secondary_Hcc' + cpt + '_' + icd + '" onchange="HccDropdownChange(' + cpt + ',' + icd + ')"' +

(isCodingCompleted == true ? 'disabled="true"' : '') + '>';
        //icdDropdown += '<option>select</option>';
        for (var i = 0; i < source.length; i++) {
            if (source[i].HCCSourceId == selected) {
                icdDropdown += '<option value="' + source[i].HCCSourceId + '" selected>' + source[i].HCCSource;
            }
            else {
                icdDropdown += '<option value="' + source[i].HCCSourceId + '">' + source[i].HCCSource;
            }
            icdDropdown += '</option>';
        }
        icdDropdown += '</select>';
        return icdDropdown;
    }

    //Primary Icd Dropdown
    function PrimaryformIcdDropDown(source, selected, cpt) {
        //icd dropdownId =Secondary_FieldName_cptid_icd
        var icdDropdown = '<select id="Primary_Notes' + cpt + '" onchange="PrimaryNotesDropdownChange(' + cpt + ')"' + (isCodingCompleted == true ? 'disabled="true"' :

'') + '>';
        for (var i = 0; i < source.length; i++) {
            if (source[i].id == selected) {
                icdDropdown += '<option value="' + source[i].id + '" selected>' + source[i].Description;
            }
            else {
                icdDropdown += '<option value="' + source[i].id + '">' + source[i].Description;
            }
            icdDropdown += '</option>';
        }
        icdDropdown += '</select>';
        return icdDropdown;
    }
    function PrimaryHCCSourceDropdown(source, selected, cpt) {
        var icdDropdown = '<select id="Primary_Hcc' + cpt + '" onchange="PrimaryHccDropdownChange(' + cpt + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '')

+ '>';
        for (var i = 0; i < source.length; i++) {
            if (source[i].HCCSourceId == selected) {
                icdDropdown += '<option value="' + source[i].HCCSourceId + '" selected>' + source[i].HCCSource;
            }
            else {
                icdDropdown += '<option value="' + source[i].HCCSourceId + '">' + source[i].HCCSource;
            }
            icdDropdown += '</option>';
        }
        icdDropdown += '</select>';
        return icdDropdown;
    }

    function PrimaryHccDropdownChange(cpt) {
        var cptd = cpt.toString().split('$__$');
        if (cptd.length > 1) {
            var d = cptd[1];
            return '<input type="text" class="inputx" maxlength="500" value="' + d + '" id="txt_Primary_Hcc' + cptd[0] + '"' + (isCodingCompleted == true ?

'disabled="true"' : '') + '/>';;
        }
        else {

            $('#txt_Primary_Hcc' + cpt).remove();
            var selectedprimarynotes = $('#Primary_Hcc' + cpt).val();
            if (selectedprimarynotes == 0) {
                $('#txt_Primary_Hcc' + cpt).remove();
            }
            else {
                $('#Primary_Hcc_' + cpt).append('<input type="text" class="inputx" maxlength="500" value="" id="txt_Primary_Hcc' + cpt + '"' + (isCodingCompleted ==

true ? 'disabled="true"' : '') + '/>');
            }
        }
    }

    function PrimaryNotesDropdownChange(cpt) {

        var cptd = cpt.toString().split('$__$');
        if (cptd.length > 1) {
            var d = cptd[1];
            return '<input type="text" maxlength="500" class="inputx" style="width:195px;" value="' + d + '" id="txt_Primary_Notes' + cptd[0] + '"' +

(isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
        }
        else {
            var selectedprimarynotes = $('#Primary_Notes' + cpt).val();
            if (selectedprimarynotes == 9999) {
                $('#Primary_Notes_' + cpt).append('<input type="text" style="width:195px;" class="inputx" maxlength="500" value="" id="txt_Primary_Notes' + cpt + '"' +

(isCodingCompleted == true ? 'disabled="true"' : '') + '/>');
            }
            else {
                $('#txt_Primary_Notes' + cpt).remove();
            }
        }
    }
    //Adding New CPT
    function AddNewCpt() {

        var z = cptcount;
        cptcount = cptcount + 1;
        //var cptstart = '<button class="accordion" onclick="AccordianClick(this)">Cpt</button><div id="cpt_number_' + cptcount + '" class="panel col12">' +

        FormCptDiv(undefined, cptcount);
        var cptstart = '<div class="accordion inline" onclick="AccordianClick(this)"><label id="lbl' + cptcount + '"></label><span>&nbsp;</span>';
        cptstart += '<div id="' + cptcount + '" style="pointer-events:none;">' + ReplicateCpt(cptcount, undefined) + '</div>';// ReplicateCpt(cptcount, undefined)
        cptstart += '</div><div id="cpt_number_' + cptcount + '" class="panel col12">' + FormCptDiv(undefined, cptcount);
        var primaryhtml = FormPrimaryDiv(undefined, cptcount);
        var secondaryhtml = FormSecondaryTable(undefined, cptcount, 1);

        var aSecondaryDiv = secondaryDiv.replace('$$id', cptcount);

        secondaryhtml = aSecondaryDiv + secondaryhtml + '</table></div></div>';

        var tertiaryClassification = '<div id="divHcc_' + cptcount + '" class="col12">';

        var firsttertiary = FormFirstHCC(cptcount);
        cptstart += primaryhtml + secondaryhtml + tertiaryClassification + firsttertiary + '</div>';
        //First Hcc
        cptstart += '</div>';
        $('#codingForm').append(cptstart);
        //Closing Cpt

        if (this.event.target.parentNode != undefined) {
            var id = this.event.target.parentNode.parentNode.parentNode.id;
            var dx = $('#' + id).prev();
            if (dx.length > 0) {
                if (dx[0].nextElementSibling) {
                    dx[0].nextElementSibling.style.display = "block";
                    $(dx[0]).click();
                }
            }

        }

        //Opening Newly Added Cpt
        if (this.event.target.parentNode != undefined) {
            var d = $('#cpt_number_' + cptcount).prev();
            if (d.length > 0) {
                if (d[0].nextElementSibling) {
                    d[0].nextElementSibling.style.display = "none";
                    $(d[0]).click();
                }
            }
        }
        $('#PhyCpt_' + cptcount).focus();

        QueryHoverEventBinder();
        //$('#codingForm').scrollTop($('#codingForm').scrollTop()+100);

    }

    function DeleteCpt(cpt) {
        var x = $('#codingForm > div[id]');
        if (x.length > 1) {
            if (confirm('Do you want to Delete Cpt?')) {
                var d = $('#cpt_number_' + cpt).prev();
                $(d[0]).remove();
                $('#cpt_number_' + cpt).remove();
                alert('Cpt Deleted');
                return;
            }
        }
        else {
            if (confirm('Please click OK to clear data')) {

                var d = $('#cpt_number_' + cpt).prev();
                $(d[0]).remove();
                $('#cpt_number_' + cpt).remove();
                LoadDefaultTemplate();
            }
        }
    }

    //Handling Dropdown changes
    function NotesDropdownChange(cpt, icd) {

        var icdsss = icd.toString().split('$__$');
        var d;
        if (icdsss.length > 1) {
            d = icdsss[1];
            icd = icdsss[0];
            return '<input type="text" maxlength="500" class="inputx" style="width:195px" value="' + d + '" id="txt_Secondary_Notes_' + cpt + '_' + icd + '"' +

(isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
        }
        else {
            var dropdownselectedvalue = $('#Secondary_Notes' + cpt + '_' + icd + ' option:selected').text();
            if (dropdownselectedvalue === 'Combination code available' || dropdownselectedvalue === 'Other') {
                $('#txt_Secondary_Notes_' + cpt + '_' + icd).remove();
                $('#Secondary_Notes_' + cpt + '_' + icd).append('<input type="text" style="width:195px" class="inputx" maxlength="500" value="" id="txt_Secondary_Notes_' + cpt + '_' + icd + '"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/>');
            }
            else {
                $('#txt_Secondary_Notes_' + cpt + '_' + icd).remove();
            }
        }
    }
    function HccDropdownChange(cpt, icd) {

        var icdsss = icd.toString().split('$__$');
        var d;
        if (icdsss.length > 1) {
            d = icdsss[1];
            icd = icdsss[0];
            return '<input type="text" class="inputx" value="' + d + '" maxlength="500" id="txt_hcc_' + cpt + '_' + icd + '"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
        }
        else {

            var selectedval = $('#Secondary_Hcc' + cpt + '_' + icd).val();
            if (selectedval != 0) {
                $('#txt_hcc_' + cpt + '_' + icd).remove();
                var dropdownselectedvalue = $('#Secondary_Hcc' + cpt + '_' + icd + ' option:selected').text();
                //if (dropdownselectedvalue === 'Other') {
                $('#Secondary_HccSource_' + cpt + '_' + icd).append('<input type="text" class="inputx" maxlength="500" value="" id="txt_hcc_' + cpt + '_' + icd + '"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/>');
            }
            else {
                $('#txt_hcc_' + cpt + '_' + icd).remove();
            }
            //}
            //else {
            //    $('#txt_hcc_' + cpt + '_' + icd).remove();
            //}
        }
    }
    function AsyncTest(selectedcpt, id) {
        return new Promise(function (resolve, reject) {
            var d = '';
            let getCptReason = {
                "async": false,
                "crossDomain": true,
                "url": "/vbaworkorder/GetCptReason?cptId=",
                "method": "POST"
            };
            getCptReason.url += selectedcpt;
            $.ajax(getCptReason).success(function (data) {

                d += FormCptReasonDpd(data, id, val);
                resolve(d);
            });
        });
    };

    function GetCptReasons(ix, cy) {

        var html = '';
        var selectedcpt = '';
        var id;
        var val;
        if (ix != undefined) {
            selectedcpt = $('#cpt_' + ix + ' option:selected').val();
            val = '';
        }
        else {
            var x = cy.toString().split('$__$');
            selectedcpt = x[0];
            id = x[1];
            val = x[2];

            if (selectedcpt == 9999) {
                return '<input type="text" style="width:252px;" class="inputx" value="' + val + '" id="txt_cpt_' + id + '"' + (isCodingCompleted == true ?

'disabled="true"' : '') + '/>';
            }
            else {
                var html = "";
                //var x = AsyncTest(selectedcpt, id);

                $.ajax({
                    "async": false,
                    "crossDomain": true,
                    "url": "/vbaworkorder/GetCptReason?cptId=" + selectedcpt,
                    "method": "POST"
                }).
                then(function (xz) {

                    html += FormCptReasonDpd(xz, id, val)
                });
                return html;
            }

        }



        if (selectedcpt == 9999) {
            if (ix == undefined) {
                return '<input type="text" style="width:252px;" class="inputx" value="' + val + '" id="txt_cpt_' + id + '"' + (isCodingCompleted == true ?

'disabled="true"' : '') + '/>';
            }
            else {
                $('#Cpt_' + ix).append('<input type="text" style="width:252px;" class="inputx" id="txt_cpt_' + ix + '"' + (isCodingCompleted == true ?

'disabled="true"' : '') + '/>');
                //$('#CptReason_' + ix).empty();
                $('#CptReason_' + ix).html('<input type="text"  style="width:252px;" class="inputx" id="txt_cptreason_' + ix + '" value=""/>');

            }
        }
        else if (selectedcpt == 0) {
            var otherText = $('#txt_cpt_' + ix);
            if (otherText != undefined && otherText.length > 0) {
                $('#txt_cpt_' + ix).remove();
            }

            $('#CptReason_' + ix).html('&nbsp;');
        }
        else {
            var parent = $('#Cpt_' + ix);
            if (parent != undefined && parent.length > 0) {
                var findInput = $('#Cpt_' + ix).find('input');
                if (findInput != undefined && findInput.length > 0) {
                    if ($('#Cpt_' + ix).find('input').attr('id') == ('txt_cpt_' + ix)) {
                        $('#Cpt_' + ix).find('input').remove();
                    }
                }
            }
            //$('#txt_cpt_' + ix).remove();
            let getCptReason = {
                "async": false,
                "crossDomain": true,
                "url": "/vbaworkorder/GetCptReason?cptId=",
                "method": "POST"
            };
            getCptReason.url += selectedcpt;
            $.ajax(getCptReason).done(function (data) {
                html += FormCptReasonDpd(data, ix, val);
            });
            $('#CptReason_' + ix).empty();
            $('#CptReason_' + ix).html('&nbsp;');
            $('#CptReason_' + ix).append(html);
        }

    }

    function GetCptReasons_Text(ix, cy) {

        var html = '';
        var selectedcpt = '';
        var id;
        var val;
        if (ix != undefined) {
            selectedcpt = $('#cpt_' + ix + ' option:selected').val();
            val = '';
        }
        else {
            var x = cy.toString().split('$__$');
            selectedcpt = x[0];
            id = x[1];
            val = x[2];

            if (selectedcpt == 9999) {
                return '<input type="text" class="inputx" value="' + val + '" id="txt_cptreason_' + id + '"' + (isCodingCompleted == true ? 'disabled="true"' : '') +

'/>';
            }
            else {
                var html = "";
                //var x = AsyncTest(selectedcpt, id);

                $.ajax({
                    "async": false,
                    "crossDomain": true,
                    "url": "/vbaworkorder/GetCptReason?cptId=" + selectedcpt,
                    "method": "POST"
                }).
                then(function (xz) {

                    html += FormCptReasonDpd(xz, id, val)
                });
                return html;
            }

        }

        if (selectedcpt == 'select') {

        }

        if (selectedcpt == 9999) {
            if (ix == undefined) {
                return '<input type="text" class="inputx" value="' + val + '" id="txt_cpt_' + id + '"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
            }
            else {
                $('#Cpt_' + ix).append('<input type="text" class="inputx" id="txt_cpt_' + ix + '"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/>');
                $('#CptReason_' + ix).empty();
            }
        }
        else {
            $('#txt_cpt_' + ix).remove();
            let getCptReason = {
                "async": false,
                "crossDomain": true,
                "url": "/vbaworkorder/GetCptReason?cptId=",
                "method": "POST"
            };
            getCptReason.url += selectedcpt;
            $.ajax(getCptReason).done(function (data) {
                html += FormCptReasonDpd(data, ix, val);
            });
            $('#CptReason_' + ix).empty();
            $('#CptReason_' + ix).append(html);
        }

    }

    function FormCptReasonDpd(source, ix, selected) {

        var html = '';
        var id = 'cptreason_' + ix;
        if (source.length > 1) {
            html += '<select id="' + id + '" onchange="CptReasonChanged(' + ix + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '>';

            for (var i = 0; i < source.length; i++) {
                if (source[i].Value == selected) {
                    html += '<option value="' + source[i].Value + '" selected>' + source[i].Text + '</option>';
                }
                else {
                    html += '<option value="' + source[i].Value + '">' + source[i].Text + '</option>';
                }
            }
            html += '<option value="9999" ' + (selected == 9999 ? 'selected' : '') + '>Other</option>';
            html += '</select>';
        }
        else {
            html += '<input type="text"  style="width:252px;" class="inputx" id="txt_' + id + '" value="' + ((selected == undefined) ? '' : selected) + '"/>';
        }
        return html;
    }

    function CptReasonChanged(ix) {
        var cptreason = $('#cptreason_' + ix).val();
        if (cptreason == 9999) {
            var html = '';
            html = '<input type="text" value="" class="inputx" maxlength="500" id="txt_cptreason_' + ix + '"' + (isCodingCompleted == true ? 'disabled="true"' : '') +

'/>';
            $('#CptReason_' + ix).append(html);
        }
        else {
            $('#txt_cptreason_' + ix).remove();
        }

    }

    function ModifiersChanged(ix, cy) {

        var val = '', selectedmodifier;
        var id;
        var z;
        var d;
        if (ix == undefined) {
            id = cy.toString().split('$__$');
            d = id[0];
            z = id[1];
            val = id[2];
        }
        if (ix == undefined) {
            selectedmodifier = d;
        }
        else {
            selectedmodifier = $('#modifier_' + ix).val();
        }

        if (selectedmodifier == 9999) {
            if (ix == undefined) {
                return '<input type="text" class="inputx" value="' + val + '" maxlength="500" id="txt_modifier_' + z + '"' + (isCodingCompleted == true ?

'disabled="true"' : '') + '/>';
            }
            else {
                $('#Modifier_' + ix).append('<input type="text" class="inputx" maxlength="500" value="" id="txt_modifier_' + ix + '"' + (isCodingCompleted == true ?

'disabled="true"' : '') + '/>');
            }
        }
        else {
            $('#txt_modifier_' + ix).remove();
        }
    }

    function FormTertiaryTableHeader(ix, row, selection) {
        // var dss=;
        // if(dss){
        //     dss="Additional ICD Classification";
        // }
        debugger;
        var firsthcc = '<div id="div_hcc_' + ix + '_' + row + '" class="inline col12">';
        firsthcc += '<div class="col12"><div class="col12 inline icdblock"> ';
        firsthcc += '<div class="TertiaryHeading col12">'
        //firsthcc += '<label id="lbl_hcc_'+ ix + '_' + row + '">Additional ICD Classification</label>';
        firsthcc += '<div style="float:left;width:150px;padding:4px;" ><label id="lbl_hcc_' + ix + '_' + row + '">' + (selection == undefined || selection == '0' ? "Additional ICD Classification" : GetOptGroup(selection, ix, row)) + '</label></div>';
        firsthcc += FormAdditionalClassificationDropdown(selection, ix, row);
        firsthcc += '<div class="divAddNewTertiary"><input type="button" class="btnAddNewTertiary mR15" value="Add New" onclick="AddNewHccClassification(' + ix + ')" '

+ (isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
        firsthcc += '<input type="button" class="btnRemoveTertiary" value="Remove" onclick="RemoveHccClassification(' + ix + ',' + row + ')" ' + (isCodingCompleted ==

true ? 'disabled="true"' : '') + '/>'
        firsthcc += '</div></div>';
        firsthcc += '<table id="tbl_hcc_' + ix + '_' + row + '"class="col12">';
        firsthcc += '<tr>';
        firsthcc += '<th class="headerNew ICDColumn">Prov ICD</th>';
        firsthcc += '<th class="headerNew ICDColumn">IKS ICD</th>';
        firsthcc += '<th class="headerNew ICDIconColumn"></th>';
        firsthcc += '<th class="headerNew NoteColumn1">Notes</th>';
        firsthcc += '<th class="headerNew HCCSourceColumn1">Source Of HCC</th>';
        firsthcc += '<th class="headerNew QueryColumn1">Query</th>';
        firsthcc += '<th class="headerNew ActionColumn">Action</th>';
        firsthcc += '</tr>';
        return firsthcc;
    }

    function FormtertiaryTableRow(ix, table, row, tt) {
        var firsthcc = "";
        if (tt) {
            var checkHccX = CheckHcc(tt.PhySelectedICD);
            var checkHccY = CheckHcc(tt.IKSSelectedICD);
            if (checkHccX.Result == true && checkHccY.Result == true) {
                tt.IsHCC = 1;
            }
            else {
                tt.IsHCC = 0;
            }
        }

        if (tt != undefined) {
            firsthcc += '<tr>';
            firsthcc += '<td><input maxlength="9" type="text" class="margintop5 ICDTextWidth" value="' + tt.PhySelectedICD + '" id="txt_hcc_provicd_' + ix + '_' + table + '_' + row + '" onchange="AddittionalHccProvICDChanged(' + ix + ',' + table + ',' + row + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></td>';
            firsthcc += '<td><input maxlength="9" type="text" class="margintop5 ICDTextWidth" value="' + tt.IKSSelectedICD + '" id="txt_hcc_iksicd_' + ix + '_' + table + '_' + row + '" onchange="AddittionalHccIksICDChanged(' + ix + ',' + table + ',' + row + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></td>';
            firsthcc += '<td>';
            firsthcc += '<div id="Tert_Icd_HCC_' + ix + '_' + table + '_' + row + '" class="statusindi hcc" style="display:' + (tt.IsHCC == 1 ? 'block' : 'none') + '"></div>';
            firsthcc += '<div id="HCC_IcdStatus_Green_' + ix + '_' + table + '_' + row + '" class="statusindi grn" style="display:' + (((tt.IKSSelectedICD.length != 0 && tt.PhySelectedICD.length != 0)) && (tt.IKSSelectedICD == tt.PhySelectedICD) ? 'block' : 'none') + '; vertical-align: top;"></div>';
            firsthcc += '<div id="HCC_IcdStatus_Blue_' + ix + '_' + table + '_' + row + '" class="statusindi blue" style="display:none; vertical-align: top;"></div>';
            firsthcc += '<div id="HCC_IcdStatus_Red_' + ix + '_' + table + '_' + row + '" class="statusindi red1" style="display:' + ((tt.IKSSelectedICD != tt.PhySelectedICD) ? 'block' : 'none') + '; vertical-align: top;"></div></td>';
            firsthcc += '<td><div id="hcc_notes_' + ix + '_' + table + '_' + row + '">' +
               FormingNotesCase(tt, Notes_List, ix, table, row, 'tertiary')
                            + '</div></td>';
            firsthcc += '<td><div id="hcc_hcc_' + ix + '_' + table + '_' + row + '">'
                + FormingHccCase(tt, HCCSource_List, ix, table, row, 'tertiary')
                + '&nbsp;</div></td>';
            firsthcc += '<td style="text-align: center!important;"><input type="text" class="inputx"  maxlength="300" value="' + tt.Query + '" id="txt_hcc_query_' + ix + '_' + table + '_' + row + '"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></td>';
            firsthcc += '<td><input type="button"  class="btnPlus" value="+" onclick="AddNewHccRow(' + ix + ',' + table + ',' + row + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '><input type="button"  class="btnMinus" value="-" onclick="RemoveICD(this)"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></td>';
            firsthcc += '</tr>';
        }
        else {
            firsthcc += '<tr>';
            firsthcc += '<td><input type="text"  maxlength="9" class="margintop5 ICDTextWidth inputx" value="" id="txt_hcc_provicd_' + ix + '_' + table + '_' + row + '" onchange="AddittionalHccProvICDChanged(' + ix + ',' + table + ',' + row + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></td>';
            firsthcc += '<td><input type="text" maxlength="9" class="margintop5 ICDTextWidth inputx" value="" id="txt_hcc_iksicd_' + ix + '_' + table + '_' + row + '" onchange="AddittionalHccIksICDChanged(' + ix + ',' + table + ',' + row + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></td>';
            firsthcc += '<td>';
            firsthcc += '<div id="Tert_Icd_HCC_' + ix + '_' + table + '_' + row + '" class="statusindi hcc" style="display:none"></div>';
            firsthcc += '<div id="HCC_IcdStatus_Green_' + ix + '_' + table + '_' + row + '" class="statusindi grn" style="display:none; vertical-align: top;"></div>';
            firsthcc += '<div id="HCC_IcdStatus_Blue_' + ix + '_' + table + '_' + row + '" class="statusindi blue" style="display:none; vertical-align: top;"></div>';
            firsthcc += '<div id="HCC_IcdStatus_Red_' + ix + '_' + table + '_' + row + '" class="statusindi red1" style="display:none; vertical-align:top;"></div></td>';
            // firsthcc += '<td><div><div id="hcc_notes_' + ix + '_' + table + '_' + row + '"></div>&nbsp;</div></td>';
            firsthcc += '<td><div id="hcc_notes_' + ix + '_' + table + '_' + row + '"></div></td>';
            // firsthcc += '<td><div><div id="hcc_hcc_' + ix + '_' + table + '_' + row + '"></div>&nbsp;</div></td>';
            firsthcc += '<td><div id="hcc_hcc_' + ix + '_' + table + '_' + row + '"></div></td>';
            firsthcc += '<td style="text-align: center!important;"><input type="text" class="inputx"  maxlength="300" value="" id="txt_hcc_query_' + ix + '_' + table + '_' + row + '"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></td>';
            firsthcc += '<td><input type="button" value="+"  class="btnPlus" onclick="AddNewHccRow(' + ix + ',' + table + ',' + row + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '><input type="button" value="-"  class="btnMinus" onclick="RemoveICD(this)"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></td>';
            firsthcc += '</tr>';
        }
        return firsthcc;
    }

    function FormingNotesCase(icd, data, cpt, table, row, icdlevel) {

        if (icd.PhySelectedICD.length != 0 && icd.IKSSelectedICD.length != 0) {
            if (icd.PhySelectedICD != icd.IKSSelectedICD) {
                if (icdlevel == 'primary') {
                    var html = PrimaryformIcdDropDown(data, icd.Notes, cpt);
                    if (icd.Notes == 9999) {
                        html += '<input type="text" class="inputx" maxlength="500" style="width:195px;" value="' + icd.OtherNotes + '" id="txt_Primary_Notes' + cpt + '"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/>'
                    }
                    return html;
                }
                else if (icdlevel == 'secondary') {
                    var html = formIcdDropDown(data, icd.Notes, cpt, table);
                    if (icd.Notes == 9999) {
                        html += '<input type="text" class="inputx" maxlength="500" style="width:195px;" value="' + icd.OtherNotes + '" id="txt_Secondary_Notes_' + cpt + '_' + table + '"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
                    }
                    return html;
                }
                else if (icdlevel == 'tertiary') {

                    var html = FormAdditionalIcdDropDown(data, icd.Notes, cpt, table, row);
                    if (icd.Notes == 9999) {
                        html += '<input type="text" class="inputx" style="width:195px;" value="' + icd.OtherNotes + '" maxlength="500" id="txt_Additional_Hcc_Notes' +

cpt + '_' + table + '_' + row + '"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
                    }
                    return html;
                }

                return '';
            }
        }
        return '';



    }

    function FormingHccCase(icdinfo, data, cpt, icd, row, icdlevel) {

        if (icdinfo.PhySelectedICD.length != 0 && icdinfo.IKSSelectedICD.length != 0) {
            var checkhcc = false;
            var checkhccX = CheckHcc(icdinfo.PhySelectedICD);
            var checkhccY = CheckHcc(icdinfo.IKSSelectedICD);
            if (checkhccX.Result == true && checkhccY.Result == true) {
                checkhcc = true;
            }



            if (checkhcc == true) {
                if (icdlevel == 'primary') {
                    var html = PrimaryHCCSourceDropdown(data, icdinfo.HCCSource_Id, cpt);
                    if (icdinfo.HCCSource_Id > 0) {
                        html += '<input type="text" class="inputx" maxlength="500" value="' + icdinfo.HCCSourceNotes + '" id="txt_Primary_Hcc' + cpt + '"' +

(isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
                    }
                    return html;
                }
                else if (icdlevel == 'secondary') {
                    var html = HCCSourceDropdown(data, icdinfo.HCCSource_Id, cpt, icd);
                    if (icdinfo.HCCSource_Id > 0) {
                        html += '<input type="text" class="inputx" value="' + icdinfo.HCCSourceNotes + '" maxlength="500" id="txt_hcc_' + cpt + '_' + icd + '"' +

(isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
                    }
                    return html;
                }
                else if (icdlevel == 'tertiary') {
                    var html = FormAdditionalHCCSourceDropdown(data, icdinfo.HCCSource_Id, cpt, icd, row);
                    if (icdinfo.HCCSource_Id > 0) {
                        html += '<input type="text" class="inputx" value="' + icdinfo.HCCSourceNotes + '" maxlength="500" id="txt_Additional_Hcc_Hcc' + cpt + '_' + icd

+ '_' + row + '"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
                    }
                    return html;
                }
            }
        }
        return '';
    }

    function FormingCptCase(cpt, ix) {
        if (cpt.CPTCode_IKSSelected.length != 0 && cpt.CPTcode_PhySelected.length != 0) {
            if (cpt.CPTCode_IKSSelected != cpt.CPTcode_PhySelected) {
                var html = formCptDropDown(ix, cpt.NoteCPTCode, NoteCPTCode_List, 'cpt');
                if (cpt.NoteCPTCode > 0 && cpt.NoteCPTCode == 9999) {
                    if (cpt.OtherNoteCPTCode.trim().length == 0) {
                        html += '<input type="text" class="inputx" style="width:252px;" id="txt_cpt_' + ix + '"' + (isCodingCompleted == true ? 'disabled="true"' : '')

+ '/>'
                    }
                    else {
                        html += '<input type="text" style="width:252px;" class="inputx" value="' + cpt.OtherNoteCPTCode + '" id="txt_cpt_' + ix + '"' +

(isCodingCompleted == true ? 'disabled="true"' : '') + '/>'
                    }
                }
                return html;
            }
            else if (cpt.Unit_IksSelected.length != 0 && cpt.Unit_PhySelected.length != 0) {
                if (cpt.Unit_PhySelected != cpt.Unit_IksSelected) {
                    var html = formCptDropDown(ix, cpt.NoteCPTCode, NoteCPTCode_List, 'cpt');
                    if (cpt.NoteCPTCode > 0 && cpt.NoteCPTCode == 9999) {
                        if (cpt.OtherNoteCPTCode.trim().length == 0) {
                            html += '<input type="text" style="width:252px;" class="inputx" id="txt_cpt_' + ix + '"' + (isCodingCompleted == true ? 'disabled="true"' :

'') + '/>'
                        }
                        else {
                            html += '<input type="text" style="width:252px;" class="inputx" value="' + cpt.OtherNoteCPTCode + '" id="txt_cpt_' + ix + '"' +

(isCodingCompleted == true ? 'disabled="true"' : '') + '/>'
                        }

                    }
                    return html;
                }
            }
        }

        return '';
    }

    function FormingCptReasonCase(cpt, ix) {
        var d = "";
        if (cpt.NoteCPTCode > 0 && cpt.NoteCPTCode != 9999) {
            $.ajax({
                "async": false,
                "crossDomain": true,
                "url": "/vbaworkorder/GetCptReason?cptId=" + cpt.NoteCPTCode,
                "method": "POST"
            }).
               then(function (xz) {

                   if (xz.length > 1) {
                       var html = '<select id="cptreason_' + ix + '" onchange="CptReasonChanged(' + ix + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') +

'>';

                       for (var i = 0; i < NoteCPTCodeReason_List.length; i++) {
                           if (NoteCPTCodeReason_List[i].id == cpt.NoteCPTCodeReason) {
                               html += '<option value="' + NoteCPTCodeReason_List[i].id + '" selected>' + NoteCPTCodeReason_List[i].Description + '</option>';
                           }
                           else {
                               html += '<option value="' + NoteCPTCodeReason_List[i].id + '">' + NoteCPTCodeReason_List[i].Description + '</option>';
                           }
                       }
                       html += '</select>';

                       if (cpt.NoteCPTCodeReason == 9999) {
                           if (cpt.OtherNoteCPTCodeReason.trim().length == 0) {
                               html += '<input type="text" style="width:252px;" class="inputx" id="txt_cptreason_' + ix + '"' + (isCodingCompleted == true ?

'disabled="true"' : '') + ' />';
                           }
                           else {
                               html += '<input type="text" style="width:252px;" class="inputx" id="txt_cptreason_' + ix + '" value="' + cpt.OtherNoteCPTCodeReason +

'"' + (isCodingCompleted == true ? 'disabled="true"' : '') + ' />';
                           }
                       }

                       d = html;
                   }
                   else {
                       if (cpt.OtherNoteCPTCodeReason.trim().length == 0) {
                           var html = '<input type="text" style="width:252px;" class="inputx" id="txt_cptreason_' + ix + '"' + (isCodingCompleted == true ?

'disabled="true"' : '') + '>';
                           d = html;
                       }
                       else {
                           var html = '<input type="text" style="width:252px;" class="inputx" id="txt_cptreason_' + ix + '" value="' + cpt.OtherNoteCPTCodeReason + '"'

+ (isCodingCompleted == true ? 'disabled="true"' : '') + '>';
                           d = html;
                       }
                   }
               });
            return d;
        }
        else if (cpt.NoteCPTCode == 9999) {
            var html = '<input type="text" style="width:252px;" class="inputx" id="txt_cptreason_' + ix + '" value="' + cpt.OtherNoteCPTCodeReason + '"' +

(isCodingCompleted == true ? 'disabled="true"' : '') + '>';
            return html;
        }
        return '';
    }

    function FormingCptModifierCase(cpt, ix) {
        if (cpt.Modifier_PhySelected.length != 0 || cpt.Modifier_IKSSelected.length != 0) {
            if (cpt.Modifier_PhySelected.trim() != cpt.Modifier_IKSSelected.trim()) {
                var html = formCptDropDown(ix, cpt.NoteModifier, NoteModifiere_List, 'mod');
                if (cpt.NoteModifier > 0 && cpt.NoteModifier == 9999) {
                    html += '<input type="text" style="width:252px;" class="inputx" value="' + cpt.OtherNoteModifier + '" maxlength="500" id="txt_modifier_' + ix + '"'

+ (isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
                }
                return html;
            }
        }
        return '';
    }

    function FormFirstHCC(ix) {
        var firsthcc = '<div id="div_hcc_' + ix + '_' + 1 + '">';
        firsthcc += '<div class="col12"><div class="col12 inline icdblock"> ';
        firsthcc += '<div class="TertiaryHeading col12">';
        firsthcc += '<div style="float:left;width:150px;padding:4px;"><label id="lbl_hcc_' + ix + '_' + 1 + '">Additional ICD Classification</div>';
        firsthcc += FormAdditionalClassificationDropdown(undefined, ix, 1) + '</label>';
        firsthcc += '<div class="divAddNewTertiary"><input type="button"  class="btnAddNewTertiary mR15" value="Add New" onclick="AddNewHccClassification(' + ix + ')"'

+ (isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
        firsthcc += '<input type="button" class="btnRemoveTertiary" value="Remove" onclick="RemoveHccClassification(' + ix + ',' + 1 + ')" ' + (isCodingCompleted ==

true ? 'disabled="true"' : '') + '/>'
        firsthcc += '</div>';
        firsthcc += '</div>';
        firsthcc += '<table id="tbl_hcc_' + ix + '_' + 1 + '" class="col12">';
        firsthcc += '<tr class="headerNew">';
        firsthcc += '<th class="headerNew ICDColumn">Prov ICD</th>';
        firsthcc += '<th class="headerNew ICDColumn">IKS ICD</th>';
        firsthcc += '<th class="headerNew ICDIconColumn"></th>';
        firsthcc += '<th class="headerNew NoteColumn1">Notes</th>';
        firsthcc += '<th class="headerNew HCCSourceColumn1">Source Of HCC</th>';
        firsthcc += '<th class="headerNew QueryColumn1">Query</th>';
        firsthcc += '<th class="headerNew ActionColumn">Action</th>';

        firsthcc += '</tr>';
        firsthcc += '<tr>';
        firsthcc += '<td><input type="text" class="margintop5 ICDTextWidth inputx" maxlength="8" value="" id="txt_hcc_provicd_' + ix + '_' + 1 + '_' + 1 + '" onchange="AddittionalHccProvICDChanged(' + ix + ',' + 1 + ',' + 1 + ')"/></td>';
        firsthcc += '<td><input type="text" class="margintop5 ICDTextWidth inputx" maxlength="8" value="" id="txt_hcc_iksicd_' + ix + '_' + 1 + '_' + 1 + '" onchange="AddittionalHccIksICDChanged(' + ix + ',' + 1 + ',' + 1 + ')"/></td>';
        firsthcc += '<td>';
        firsthcc += '<div id="Tert_Icd_HCC_' + ix + '_' + 1 + '_' + 1 + '" class="statusindi hcc" style="display:none"></div>';
        firsthcc += '<div id="HCC_IcdStatus_Green_' + ix + '_' + 1 + '_' + 1 + '" class="statusindi grn" style="display:none; vertical-align: top;"></div>';
        firsthcc += '<div id="HCC_IcdStatus_Blue_' + ix + '_' + 1 + '_' + 1 + '" class="statusindi blue" style="display:none; vertical-align: top;"></div>';
        firsthcc += '<div id="HCC_IcdStatus_Red_' + ix + '_' + 1 + '_' + 1 + '" class="statusindi red1" style="display:none; vertical-align: top;"></div></td>';
        firsthcc += '<td><div id="hcc_notes_' + ix + '_' + 1 + '_' + 1 + '"></div></td>';
        firsthcc += '<td><div id="hcc_hcc_' + ix + '_' + 1 + '_' + 1 + '"></div></td>';
        firsthcc += '<td style="text-align: center!important;"><input type="text"  class="inputx" maxlength="300" value="" id="txt_hcc_query_' + ix + '_' + 1 + '_' + 1 + '"/></td>';
        firsthcc += '<td><input type="button" value="+"  class="btnPlus" onclick="AddNewHccRow(' + ix + ',' + 1 + ',' + 1 + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '><input type="button" value="-"  class="btnMinus" onclick="RemoveICD(this)"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></td>';
        firsthcc += '</tr>';
        firsthcc += '</table>';
        firsthcc += '</div>';
        firsthcc += '</div>';
        return firsthcc;
    }

    function AddNewHcctable(ix, row) {
        var firsthcc = '<div id="div_hcc_' + ix + '_' + row + '" class="inline  col12">';
        firsthcc += '<div class="col12"><div class="col12 inline icdblock"> ';
        firsthcc += '<div class="TertiaryHeading col12">'
        firsthcc += '<div style="float:left;width:150px;padding:4px;"><label id="lbl_hcc_' + ix + '_' + row + '">Additional ICD Classification</label></div>';
        firsthcc += FormAdditionalClassificationDropdown(undefined, ix, row) + '';
        firsthcc += '<div class="divAddNewTertiary"><input type="button" class="btnAddNewTertiary mR15" value="Add New" onclick="AddNewHccClassification(' + ix + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
        firsthcc += '<input type="button" class="btnAddNewTertiary mR15" value="Remove" onclick="RemoveHccClassification(' + ix + ',' + row + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/>'
        firsthcc += '</div></div>';
        firsthcc += '<table id="tbl_hcc_' + ix + '_' + row + '" class="col12">';
        firsthcc += '<tr>';
        firsthcc += '<th class="headerNew ICDColumn">Prov ICD</th>';
        firsthcc += '<th class="headerNew ICDColumn">IKS ICD</th>';
        firsthcc += '<th class="headerNew ICDIconColumn"></th>';
        firsthcc += '<th class="headerNew NoteColumn1">Notes</th>';
        firsthcc += '<th class="headerNew HCCSourceColumn1">Source Of HCC</th>';
        firsthcc += '<th class="headerNew QueryColumn1">Query</th>';
        firsthcc += '<th class="headerNew ActionColumn">Action</th>';
        firsthcc += '</tr>';
        firsthcc += '<tr>';
        firsthcc += '<td><input type="text" maxlength="8" class="margintop5 ICDTextWidth" value="" id="txt_hcc_provicd_' + ix + '_' + row + '_' + 1 + '" onchange="AddittionalHccProvICDChanged(' + ix + ',' + row + ',' + '1)"/></td>';
        firsthcc += '<td><input type="text" maxlength="8" class="margintop5 ICDTextWidth" value="" id="txt_hcc_iksicd_' + ix + '_' + row + '_' + 1 + '" onchange="AddittionalHccIksICDChanged(' + ix + ',' + row + ',' + '1)"/></td>';
        firsthcc += '<td>';
        firsthcc += '<div id="Tert_Icd_HCC_' + ix + '_' + row + '_' + 1 + '" class="statusindi hcc" style="display:none"></div>';
        firsthcc += '<div id="HCC_IcdStatus_Green_' + ix + '_' + row + '_' + 1 + '" class="statusindi grn" style="display:none; vertical-align: top;"></div>';
        firsthcc += '<div id="HCC_IcdStatus_Blue_' + ix + '_' + row + '_' + 1 + '" class="statusindi blue" style="display:none; vertical-align: top;"></div>';
        firsthcc += '<div id="HCC_IcdStatus_Red_' + ix + '_' + row + '_' + 1 + '" class="statusindi red1" style="display:none; vertical-align: top;"></div></td>';
        firsthcc += '<td><div id="hcc_notes_' + ix + '_' + row + '_' + 1 + '"></div></td>';
        firsthcc += '<td><div id="hcc_hcc_' + ix + '_' + row + '_' + 1 + '"></div></td>';
        firsthcc += '<td style="text-align: center!important;"><input type="text" class="inputx" value=""  maxlength="300" id="txt_hcc_query_' + ix + '_' + row + '_' + 1 + '"/></td>';
        firsthcc += '<td><input type="button" value="+" class="btnPlus" onclick="AddNewHccRow(' + ix + ',' + row + ',' + 1 + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '><input type="button" value="-"  class="btnMinus" onclick="RemoveICD(this)"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '></td>';
        firsthcc += '</tr>';
        firsthcc += '</table>';
        firsthcc += '</div>';
        firsthcc += '</div>';
        firsthcc += '</div>';
        firsthcc += '</div>';
        return firsthcc;
    }

    function AddNewHccRow(cpt, hcctable) {
        var trs = $('#tbl_hcc_' + cpt + '_' + hcctable + ' tr');
        var length = $('#tbl_hcc_' + cpt + '_' + hcctable + ' tr').length;
        var lastrow = trs[length - 1];
        var secondrow = $(lastrow).find('td:eq(1)');
        var getInputElement = $(secondrow[0]).find('input');
        var getLastInsertedId = getInputElement[0].id;
        var getId = getLastInsertedId.split('_');
        getId = getId[getId.length - 1];

        //var newHccRow = FormNewHccRow(cpt, hcctable, tablerowcount);
        var newHccRow = FormNewHccRow(cpt, hcctable, parseInt(getId) + 1);
        $('#tbl_hcc_' + cpt + '_' + hcctable).append(newHccRow);

        QueryHoverEventBinder();
    }

    function FormNewHccRow(cpt, hcctable, tablerowcount) {
        var firsthcc = '';
        firsthcc += '<tr>';
        firsthcc += '<td><input type="text" maxlength="8" class="margintop5 ICDTextWidth inputx" value="" id="txt_hcc_provicd_' + cpt + '_' + hcctable + '_' +

tablerowcount + '" onchange="AddittionalHccProvICDChanged(' + cpt + ',' + hcctable + ',' + tablerowcount + ')"/></td>';
        firsthcc += '<td><input type="text" maxlength="8" class="margintop5 ICDTextWidth inputx" value="" id="txt_hcc_iksicd_' + cpt + '_' + hcctable + '_' +

tablerowcount + '" onchange="AddittionalHccIksICDChanged(' + cpt + ',' + hcctable + ',' + tablerowcount + ')"/></td>';
        firsthcc += '<td>';
        firsthcc += '<div id="Tert_Icd_HCC_' + cpt + '_' + hcctable + '_' + tablerowcount + '" class="statusindi hcc" style="display:none"></div>';
        firsthcc += '<div id="HCC_IcdStatus_Green_' + cpt + '_' + hcctable + '_' + tablerowcount + '" class="statusindi grn" style="display:none; vertical-align:top;"></div>';
        firsthcc += '<div id="HCC_IcdStatus_Blue_' + cpt + '_' + hcctable + '_' + tablerowcount + '" class="statusindi blue" style="display:none; vertical-align:top;"></div>';
        firsthcc += '<div id="HCC_IcdStatus_Red_' + cpt + '_' + hcctable + '_' + tablerowcount + '" class="statusindi red1" style="display:none; vertical-align:top;"></div></td>';
        firsthcc += '<td><div id="hcc_notes_' + cpt + '_' + hcctable + '_' + tablerowcount + '"></div></td>';
        firsthcc += '<td><div id="hcc_hcc_' + cpt + '_' + hcctable + '_' + tablerowcount + '"></div></td>';
        firsthcc += '<td style="text-align: center!important;"><input type="text" class="inputx"  maxlength="300" value="" id="txt_hcc_query_' + cpt + '_' + hcctable + '_' + tablerowcount + '"/></td>';
        firsthcc += '<td><input type="button" value="+"  class="btnPlus" onclick="AddNewHccRow(' + cpt + ',' + hcctable + ',' + tablerowcount + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/><input type="button" value="-"  class="btnMinus" onclick="RemoveICD(this)"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></td>';
        firsthcc += '</tr>';
        return firsthcc;
    }

    function AddNewHccClassification(cpt) {

        //var nexttableid = $('#divHcc_' + cpt + '>div[id]').children('div').length;

        var terts = $('#divHcc_' + cpt + '> div[id]');
        if (terts.length > 0) {
            var id = terts[terts.length - 1].id.split('_');
            var nexttableid = parseInt(id[id.length - 1]);
            var newHccTable = AddNewHcctable(cpt, nexttableid + 1);
            $('#divHcc_' + cpt).append(newHccTable);
        }


        QueryHoverEventBinder();
    }

    function onSecondaryHccProvIcdChanged(ix, i, a) {
        var prov_icd = $('#Secondary_ProvIcd_' + ix + '_' + i).val();
        if (prov_icd.length != 0) {
            var hcc = CheckHcc(prov_icd);
            $('#Secondary_ProvIcd_' + ix + '_' + i).attr('title', hcc.HccDesc);
            $('#Secondary_IksIcd_' + ix + '_' + i).attr('title', hcc.HccDesc);
        }
        else {
            //Removing all things
            $('#Secondary_Notes' + ix + '_' + i).remove();
            $('#txt_Secondary_Notes_' + ix + '_' + i).remove();
            $('#Secondary_Hcc' + ix + '_' + i).remove();
            $('#txt_hcc_' + ix + '_' + i).remove();
        }
        $('#Secondary_IksIcd_' + ix + '_' + i).val(prov_icd);

    }

    //Dropdown Related Task for Secondary ICD
    function onSecondaryHccIksIcdChanged(ix, i, a) {
        var Secondary_ProvIcd_ = $('#Secondary_ProvIcd_' + ix + '_' + i).val();
        var Secondary_IksIcd_ = $('#Secondary_IksIcd_' + ix + '_' + i).val();
        var hcc = CheckHcc(Secondary_IksIcd_);
        if (Secondary_ProvIcd_ != Secondary_IksIcd_) {
            if (hcc.Result == true) {
                var d = HCCSourceDropdown(HCCSource_List, undefined, ix, i);
                $('#Secondary_HccSource_' + ix + '_' + i).html(d);
            }
            else {
                var d = formIcdDropDown(Notes_List, undefined, ix, i);
                $('#Secondary_Notes_' + ix + '_' + i).html(d);
            }
        }
        else {
            if (hcc.Result == true) {
                $('#Secondary_HccSource_' + ix + '_' + i).html('');
            }
            else {
                $('#Secondary_Notes_' + ix + '_' + i).html('');
            }
        }
        $('#Secondary_IksIcd_' + ix + '_' + i).attr('title', hcc.HccDesc);
    }

    function AddittionalHccProvICDChanged(cpt, table, row) {

        var val = $('#txt_hcc_provicd_' + cpt + '_' + table + '_' + row).val();
        if (val.length != 0) {
            $('#txt_hcc_iksicd_' + cpt + '_' + table + '_' + row).val(val);
            var hcc = CheckHcc(val);
            if (hcc.Result == true) {
                $('#Tert_Icd_HCC_' + cpt + '_' + table + '_' + row).show('slow');
                $('#HCC_IcdStatus_Green_' + cpt + '_' + table + '_' + row).show('slow');

                var d = FormAdditionalHCCSourceDropdown(HCCSource_List, undefined, cpt, table, row);
                $('#hcc_hcc_' + cpt + '_' + table + '_' + row).html(d);
            }
            else {
                $('#HCC_IcdStatus_Green_' + cpt + '_' + table + '_' + row).show('slow');
                $('#Tert_Icd_HCC_' + cpt + '_' + table + '_' + row).hide('slow');

                $('#Additional_Hcc_Hcc' + cpt + '_' + table + '_' + row).remove();
                $('#hcc_notes_' + cpt + '_' + table + '_' + row).html('&nbsp;');
                $('#HCC_IcdStatus_Green_' + cpt + '_' + table + '_' + row).show('slow');
                $('#HCC_IcdStatus_Red_' + cpt + '_' + table + '_' + row).hide('slow');
            }

            $('#txt_hcc_provicd_' + cpt + '_' + table + '_' + row).attr('title', hcc.HccDesc);
            $('#txt_hcc_iksicd_' + cpt + '_' + table + '_' + row).attr('title', hcc.HccDesc);
        }
        else {
            $('#txt_hcc_iksicd_' + cpt + '_' + table + '_' + row).val(val);
            $('#Additional_Hcc_Notes' + cpt + '_' + table + '_' + row).remove();
            $('#txt_Additional_Hcc_Notes' + cpt + '_' + table + '_' + row).remove();
            $('#Additional_Hcc_Hcc' + cpt + '_' + table + '_' + row).remove();
            $('#txt_hcc_query_' + cpt + '_' + table + '_' + row).remove();

            $('#HCC_IcdStatus_Green_' + cpt + '_' + table + '_' + row).hide('slow');
            $('#HCC_IcdStatus_Blue_' + cpt + '_' + table + '_' + row).hide('slow');
            $('#HCC_IcdStatus_Red_' + cpt + '_' + table + '_' + row).hide('slow');
            $('#Tert_Icd_HCC_' + cpt + '_' + table + '_' + row).hide('slow');
        }


    }

    function AddittionalHccIksICDChanged(cpt, table, row) {
        var x = row.toString().split('$__$');
        var data = undefined;
        var hcc_prov_icd, hcc_iks_icd;
        if (x.length > 1) {
            data = x[1];
            row = x[0];
            hcc_prov_icd = x[2];
            hcc_iks_icd = x[3];

            var hcc = CheckHcc(hcc_iks_icd);
            //if (hcc.Result==false) {
            //    hcc = CheckHcc(hcc_prov_icd);
            //    if (hcc.Result==true) {
            //        hcc.Result == true;
            //    }
            //}

            if (hcc_prov_icd != hcc_iks_icd) {
                if (hcc.Result == true) {
                    return FormAdditionalHCCSourceDropdown(HCCSource_List, data, cpt, table, row);
                }
                else {
                    return FormAdditionalIcdDropDown(Notes_List, data, cpt, table, row);
                }
            }
            else {
                if (hcc.Result == true) {
                    return "";
                }
                else {
                    return "";
                }
            }
        }
        else {
            var Primary_ProvIcd_ = $('#txt_hcc_provicd_' + cpt + '_' + table + '_' + row).val();
            var Primary_IksIcd_ = $('#txt_hcc_iksicd_' + cpt + '_' + table + '_' + row).val();
            if (Primary_ProvIcd_.trim().length != 0 && Primary_IksIcd_.trim().length != 0) {
                var Provhcc = CheckHcc(Primary_ProvIcd_);
                var Ikshcc = CheckHcc(Primary_IksIcd_);

                if (Primary_ProvIcd_ == Primary_IksIcd_) {

                    if (Provhcc.Result == true && Ikshcc.Result == true) {
                        //Hcc SourceDropdown
                        $('#Additional_Hcc_Notes' + cpt + '_' + table + '_' + row).remove();
                        $('#txt_Additional_Hcc_Notes' + cpt + '_' + table + '_' + row).remove();

                        var d = FormAdditionalHCCSourceDropdown(HCCSource_List, data, cpt, table, row);
                        $('#hcc_hcc_' + cpt + '_' + table + '_' + row).html(d);

                        //if matching Hcc then green and hcc
                        $('#Tert_Icd_HCC_' + cpt + '_' + table + '_' + row).show('slow');
                        $('#HCC_IcdStatus_Green_' + cpt + '_' + table + '_' + row).show('slow');
                        $('#HCC_IcdStatus_Blue_' + cpt + '_' + table + '_' + row).hide('slow');
                        $('#HCC_IcdStatus_Red_' + cpt + '_' + table + '_' + row).hide('slow');

                        //setting icd desc as tooltip
                        $('#txt_hcc_iksicd_' + cpt + '_' + table + '_' + row).attr('title', Ikshcc.HccDesc);
                    }
                    else {
                        //Notes Dropdown
                        //var d = FormAdditionalIcdDropDown(Notes_List, data, cpt, table, row);
                        //$('#hcc_notes_' + cpt + '_' + table + '_' + row).html(d);
                        var d = $('#Additional_Hcc_Notes' + cpt + '_' + table + '_' + row);
                        if (d != undefined && d.length > 0) {
                            $('#hcc_notes_' + cpt + '_' + table + '_' + row).html('&nbsp;');
                        }

                        //if matching icds but not hcc then green
                        $('#Tert_Icd_HCC_' + cpt + '_' + table + '_' + row).hide('slow');
                        $('#HCC_IcdStatus_Green_' + cpt + '_' + table + '_' + row).show('slow');
                        $('#HCC_IcdStatus_Blue_' + cpt + '_' + table + '_' + row).hide('slow');
                        $('#HCC_IcdStatus_Red_' + cpt + '_' + table + '_' + row).hide('slow');
                    }

                }
                else {
                    if (Provhcc.Result == true && Ikshcc.Result == true) {
                        $('#Additional_Hcc_Notes' + cpt + '_' + table + '_' + row).remove();
                        $('#txt_Additional_Hcc_Notes' + cpt + '_' + table + '_' + row).remove();

                        var d = FormAdditionalHCCSourceDropdown(HCCSource_List, data, cpt, table, row);
                        $('#hcc_hcc_' + cpt + '_' + table + '_' + row).html(d);

                        //if matching Hcc then green and hcc
                        $('#Tert_Icd_HCC_' + cpt + '_' + table + '_' + row).show('slow');
                        $('#HCC_IcdStatus_Green_' + cpt + '_' + table + '_' + row).hide('slow');
                        $('#HCC_IcdStatus_Blue_' + cpt + '_' + table + '_' + row).hide('slow');
                        $('#HCC_IcdStatus_Red_' + cpt + '_' + table + '_' + row).show('slow');

                        //setting icd desc as tooltip
                        $('#txt_hcc_iksicd_' + cpt + '_' + table + '_' + row).attr('title', Ikshcc.HccDesc);
                        var d = FormAdditionalIcdDropDown(Notes_List, data, cpt, table, row);
                        $('#hcc_notes_' + cpt + '_' + table + '_' + row).html(d);
                    }
                    else {

                        $('#Additional_Hcc_Hcc' + cpt + '_' + table + '_' + row).remove();
                        $('#txt_Additional_Hcc_Hcc' + cpt + '_' + table + '_' + row).remove();

                        var d = FormAdditionalIcdDropDown(Notes_List, data, cpt, table, row);
                        $('#hcc_notes_' + cpt + '_' + table + '_' + row).html(d);

                        // if non matching icds,then red
                        $('#Tert_Icd_HCC_' + cpt + '_' + table + '_' + row).hide('slow');
                        $('#HCC_IcdStatus_Green_' + cpt + '_' + table + '_' + row).hide('slow');
                        $('#HCC_IcdStatus_Blue_' + cpt + '_' + table + '_' + row).hide('slow');
                        $('#HCC_IcdStatus_Red_' + cpt + '_' + table + '_' + row).show('slow');
                    }
                }
            }
        }
    }

    function FormAdditionalHCCSourceDropdown(source, selected, cpt, table, row) {

        var icdDropdown = '<select style="width:199px" id="Additional_Hcc_Hcc' + cpt + '_' + table + '_' + row + '" onchange="AdditionalHccDropdownChange(' + cpt + ','

+ table + ',' + row + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '>';
        for (var i = 0; i < source.length; i++) {
            if (source[i].HCCSourceId == selected) {
                icdDropdown += '<option value="' + source[i].HCCSourceId + '" selected>' + source[i].HCCSource;
            }
            else {
                icdDropdown += '<option value="' + source[i].HCCSourceId + '">' + source[i].HCCSource;
            }
            icdDropdown += '</option>';
        }
        icdDropdown += '</select>';
        return icdDropdown;
    }

    function FormAdditionalIcdDropDown(source, selected, cpt, table, row) {
        var icdDropdown = '<select id="Additional_Hcc_Notes' + cpt + '_' + table + '_' + row + '" onchange="AdditionalNotesDropdownChange(' + cpt + ',' + table + ',' +

row + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '>';
        for (var i = 0; i < source.length; i++) {
            if (source[i].id == selected) {
                icdDropdown += '<option value="' + source[i].id + '" selected>' + source[i].Description;
            }
            else {
                icdDropdown += '<option value="' + source[i].id + '">' + source[i].Description;
            }
            icdDropdown += '</option>';
        }
        icdDropdown += '</select>';
        return icdDropdown;
    }

    function AdditionalNotesDropdownChange(cpt, table, row) {

        var x = row.toString().split('$__$');
        if (x.length > 1) {
            var val = x[1];
            return '<input type="text" class="inputx" style="width:195px" value="' + val + '" maxlength="500" id="txt_Additional_Hcc_Notes' + cpt + '_' + table + '_' +

x[0] + '"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
        }
        else {
            var selectedNotes = $('#Additional_Hcc_Notes' + cpt + '_' + table + '_' + row).val();
            if (selectedNotes == 9999) {
                var html = '<input type="text" style="width:195px" class="inputx" value="" maxlength="500" id="txt_Additional_Hcc_Notes' + cpt + '_' + table + '_' + x

[0] + '"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
                $('#hcc_notes_' + cpt + '_' + table + '_' + row).append(html);
            }
            else {
                $('#txt_Additional_Hcc_Notes' + cpt + '_' + table + '_' + row).remove();
            }
        }
    }

    function AdditionalHccDropdownChange(cpt, table, row) {

        if (row.length > 1) {
            var z = row.split('$__$');
            row = z[0];
            selectedhcc = z[1];
            //if (selectedhcc == 9999) {
            if (selectedhcc > 0) {
                var html = '<input type="text" class="inputx" value="' + z[2] + '" maxlength="500" id="txt_Additional_Hcc_Hcc' + cpt + '_' + table + '_' + row + '"' +

(isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
                return html
            }
            //else {
            //    $('#txt_Additional_Hcc_Hcc' + cpt + '_' + table + '_' + row).remove();
            //}

        }

        else {
            var selectedhcc = $('#Additional_Hcc_Hcc' + cpt + '_' + table + '_' + row).val();
            //if (selectedhcc == 9999) {
            if (selectedhcc != 0) {
                $('#txt_Additional_Hcc_Hcc' + cpt + '_' + table + '_' + row).remove();
                var html = '<input type="text" class="inputx" value="" maxlength="500" id="txt_Additional_Hcc_Hcc' + cpt + '_' + table + '_' + row + '"' +

(isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
                $('#hcc_hcc_' + cpt + '_' + table + '_' + row).append(html);
            }
            else {
                $('#txt_Additional_Hcc_Hcc' + cpt + '_' + table + '_' + row).remove();
            }
            //}
            //else {
            //    $('#txt_Additional_Hcc_Hcc' + cpt + '_' + table + '_' + row).remove();
            //}
        }

    }

    function FormAdditionalClassificationDropdown(selected, cpt, table) {
        var dropdown = '<div style="float:left"><select style="width: fit-content;" id="dpd_' + cpt + '_' + table + '"' + (isCodingCompleted == true ?

'disabled="true"' : '') + ' onchange="SetHccClassificationHeader(' + cpt + ',' + table + ')">';
        //Added by Wasae afterwards start
        dropdown += '<option value="0">Please Select </option>';
        //Added by Wasae afterwards end
        for (var i = 0; i < HccClassification.length; i++) {
            dropdown += '<optgroup label="' + HccClassification[i].HccClassificationName + '">';
            var getAssociates = HccClassification_Associates.filter(function (a) {
                return a.HccClassificationId == HccClassification[i].HccClassificationId;
            });

            if (getAssociates && getAssociates.length > 0) {
                for (var j = 0; j < getAssociates.length; j++) {
                    if (selected && selected == getAssociates[j].HccAssociateId) {
                        dropdown += '<option value="' + getAssociates[j].HccAssociateId + '" selected>' + getAssociates[j].AssociateName + '</option>';
                    }
                    else {
                        dropdown += '<option value="' + getAssociates[j].HccAssociateId + '">' + getAssociates[j].AssociateName + '</option>';
                    }
                }
            }

            dropdown += '</optgroup>';
        }
        dropdown += '</select></div>';
        return dropdown;
    }

    function GetOptGroup(selection, i, row) {

        var d = HccClassification_Associates.filter(function (x) {
            return selection == x.HccAssociateId;
        });

        if (d.length > 0) {
            var dx = HccClassification.filter(function (a) {
                return d[0].HccClassificationId == a.HccClassificationId;
            });
            if (dx.length > 0) {
                var text = dx[0].HccClassificationName;
                return text;
            }
            else {
                return null;
            }
        }
        else {
            return null;
        }
    }

    function SetHccClassificationHeader(cpt, table) {
        var selectedvalue = $('#dpd_' + +cpt + '_' + table).val();
        var d = $('#divHcc_' + cpt + '>div[id]');

        //Exclude selected Dropdown Value
        var x = d.filter(function (a) { return d[a].id != 'div_hcc_' + cpt + '_' + table });
        //getting their values
        var d = [];
        for (var i = 0; i < x.length; i++) {
            var id = $($(x[i]).find('select')[0])[0].id;
            d.push($('#' + id).val());
        }

        var ds = d.filter(function (q) {
            return q == selectedvalue;
        })

        if (ds.length > 0) {
            alert('Hcc already selected for this cpt');
            // this.event.preventDefault();
            $('#dpd_' + +cpt + '_' + table).val(0);
            var d = GetOptGroup(1);
            if (d != null) {
                $('#lbl_hcc_' + cpt + '_' + table).text('Additional ICD Classification');
            }
            return false;
        }
        else {
            var d = GetOptGroup(selectedvalue);
            if (d != null) {
                $('#lbl_hcc_' + cpt + '_' + table).text(d);
            }
        }
    }

    // Save and Submit Data
    function OnSave(parameter) {
        showProgressBar();
        let CptData = '';
        let primaryData = '';
        let secondaryData = '';
        let tertiaryData = '';
        let codingformFinalobject = [];
        var codingform = $('#codingForm > div[id]');
        for (var i = 0; i < codingform.length; i++) {
            var getCptId = codingform[i].id.split('_');
            getCptId = getCptId[getCptId.length - 1];
            CptData = CollectCptData(getCptId);
            primaryData = GetPrimaryData(getCptId);
            secondaryData = GetSecondaryData(getCptId);


            var additionalHccTables = $('#divHcc_' + getCptId + ' > div');
            var X = [];
            for (var j = 0; j < additionalHccTables.length; j++) {
                var icdTrack = additionalHccTables[j].id.split('_');
                icdTrack = icdTrack[icdTrack.length - 1];
                X.push(getTertiaryTableData(parseInt(getCptId), parseInt(icdTrack)));
            }

            var Fullobjectdoc = {
                'CptInfo': CptData,
                'PrimaryIcdInfo': primaryData,
                'SecondaryIcdInfo': secondaryData,
                'AdditionalHccInfo': X
            }
            codingformFinalobject.push(Fullobjectdoc);
        }

        var obj;
        var Coding_CptCode_List = [];


        for (var i = 0; i < codingformFinalobject.length; i++) {
            let icds = [];
            icds.push(codingformFinalobject[i].PrimaryIcdInfo);

            for (var j = 0; j < codingformFinalobject[i].SecondaryIcdInfo.length; j++) {
                icds.push(codingformFinalobject[i].SecondaryIcdInfo[j]);
            }
            for (var k = 0; k < codingformFinalobject[i].AdditionalHccInfo.length; k++) {
                for (var m = 0; m < codingformFinalobject[i].AdditionalHccInfo[k].length; m++) {
                    icds.push(codingformFinalobject[i].AdditionalHccInfo[k][m]);
                }
            }
            var x = {
                "CPTCode_IKSSelected": codingformFinalobject[i].CptInfo.IksCpt,
                "CPTcode_PhySelected": codingformFinalobject[i].CptInfo.PhyCpt,
                "Modifier_IKSSelected": codingformFinalobject[i].CptInfo.IksMod,
                "Modifier_PhySelected": codingformFinalobject[i].CptInfo.PhyMod,
                "NoteCPTCode": codingformFinalobject[i].CptInfo.Cpt != undefined && codingformFinalobject[i].CptInfo.Cpt.length != 0 ? parseInt(codingformFinalobject

[i].CptInfo.Cpt) : 0,
                "NoteCPTCodeReason": codingformFinalobject[i].CptInfo.CptReason != undefined && codingformFinalobject[i].CptInfo.CptReason.length != 0 ? parseInt

(codingformFinalobject[i].CptInfo.CptReason) : 0,
                "NoteModifier": codingformFinalobject[i].CptInfo.modifier != undefined && codingformFinalobject[i].CptInfo.modifier.length != 0 ? parseInt

(codingformFinalobject[i].CptInfo.modifier) : 0,
                "Unit_IksSelected": codingformFinalobject[i].CptInfo.IksUnit,
                "Unit_PhySelected": codingformFinalobject[i].CptInfo.PhyUnit,
                "IsDiffInCPTCode": codingformFinalobject[i].CptInfo.DiffInCpt != undefined ? parseInt(codingformFinalobject[i].CptInfo.DiffInCpt) : 0,
                "IsDiffInModifier": codingformFinalobject[i].CptInfo.DiffInModifier != undefined ? parseInt(codingformFinalobject[i].CptInfo.DiffInModifier) : 0,
                "OtherNoteCPTCode": codingformFinalobject[i].CptInfo.txtCpt,
                "OtherNoteCPTCodeReason": codingformFinalobject[i].CptInfo.txtcptreason,
                "OtherNoteModifier": codingformFinalobject[i].CptInfo.txt_modifier,
                "coding_ICD_List": icds,
                "Query": codingformFinalobject[i].CptInfo.Query,
                "CptId": codingformFinalobject[i].CptInfo.CptId
            }
            Coding_CptCode_List.push(x);
        }

        var finalObjectForPost =
            {
                "AppointmentDate": basedata.AppointmentDateInfo,
                "AppointmentTime": basedata.AppointmentTime,
                "DeptId": basedata.DeptId,
                "EncounterNumber": basedata.EncounterNumber,
                "ProviderName": basedata.ProviderName,
                "Coding_CptCode_List": Coding_CptCode_List,
                "CodingStatus": 0,
                "IsVariance": 0,
                "Presenting_Complaint": $('#txtChiefCompliant').val()
                //"VarianceNotes": null,
                //"VarianceReason": null
            };

        if (parameter != "save") {
            for (var i = 0 ; i < finalObjectForPost.Coding_CptCode_List.length; i++) {
                if (finalObjectForPost.Coding_CptCode_List[i].coding_ICD_List.length > 0) {
                    finalObjectForPost.Coding_CptCode_List[i].coding_ICD_List = finalObjectForPost.Coding_CptCode_List[i].coding_ICD_List.filter(function (a) {
                        return ((a.PhySelectedICD.length != 0 || a.IKSSelectedICD.length != 0));
                    });
                }
            }
        }

        if (parameter == 'save') {
            finalObjectForPost.CodingStatus = 0;
        }
        else {
            finalObjectForPost.CodingStatus = 1;
        }

        //For Additional Hcc Classification Duplication

        for (var i = 0; i < finalObjectForPost.Coding_CptCode_List.length; i++) {
            var tertSel = [];
            var findingCulprit = [];
            var d = $('#codingForm').find("div[id='divHcc_" + finalObjectForPost.Coding_CptCode_List[i].CptId + "']")

            var tertiaryIcds = $('#divHcc_' + finalObjectForPost.Coding_CptCode_List[i].CptId + '>div[id]');
            if (tertiaryIcds != undefined && tertiaryIcds.length > 0) {
                for (var j = 0; j < tertiaryIcds.length; j++) {
                    var sel = $(tertiaryIcds[j]).find('select');
                    if (sel != undefined && sel.length > 0) {
                        var id = sel[0].id
                        tertSel.push($('#' + id).val());
                        findingCulprit.push({ 'id': id, "value": $('#' + id).val() });
                    }
                }
            }


            var count = tertSel.reduce(function (acc, curr) {
                if (typeof acc[curr] == 'undefined') {
                    acc[curr] = 1;
                } else {
                    acc[curr] += 1;
                }

                return acc;
            }, {});

            var keylist = Object.keys(count);
            if (keylist != undefined && keylist.length > 0) {
                for (var k = 0; k < keylist.length; k++) {
                    if (count[keylist[k]] > 1) {
                        var d = findingCulprit.filter(function (f) { return f.value == keylist[k] })
                        if (d.length > 0) {
                            if (d[1] != undefined && d[1].id != undefined) {
                                $('#' + d[1].id).focus();
                                alert('Additional Hcc Classification with same name exists');
                                return;
                            }
                        }
                    }
                }
            }
        }

        var resultValidate = false;
        if (parameter!='save') {
            resultValidate = Validate(finalObjectForPost);
            if (!resultValidate) {
                hideProgressBar();
                return;
            }
        }
        

        if (parameter == 'save' ? true : resultValidate) {
            $.ajax({
                url: '/VBAWorkOrder/NewOnSaveCodingDetails/',
                type: 'POST',
                contentType: 'application/json',
                async: false,
                data: JSON.stringify({ model: finalObjectForPost }),
                success: function (data) {
                    hideProgressBar();
                    if (parameter == 'save') {
                        if (data.Status == true) {
                            alert('Coding Form Saved Successfully');
                            //location.href = "/vbaworkorder/workorder";
                        }
                        else {
                            alert('Error Saving Data');
                        }
                    }
                    else {
                        if (data.Status == true) {
                            alert('Coding Form Saved Successfully');
                            $('#codingForm').html('');
                            isCodingCompleted = true;
                            finalObjectForPost.Coding_CptCode_List_Count = finalObjectForPost.Coding_CptCode_List.length;
                            for (var i = 0; i < finalObjectForPost.Coding_CptCode_List_Count; i++) {
                                finalObjectForPost.Coding_CptCode_List[i].coding_ICD_List_Count = finalObjectForPost.Coding_CptCode_List[i].coding_ICD_List.length;
                            }

                            var ds = LoadCptIcds(finalObjectForPost.Coding_CptCode_List);
                            $('#codingForm').html(ds);

                            $('#btnSave').hide();
                            $('#btnSubmit').hide();

                            location.href = "/vbaworkorder/workorder";

                        }
                        else {
                            alert('Error Saving Data');
                        }

                    }

                },
                error: function (xhr, ajaxOptions, thrownError) {
                    hideProgressBar();
                    console.log(xhr);
                }
            });
        }
    }


    function CollectCptData(cpt) {

        var PhyCpt_ = $('#PhyCpt_' + cpt).val();
        var PhyUnit_ = $('#PhyUnit_' + cpt).val();
        var PhyMod_ = $('#PhyMod_' + cpt).val();
        var IksCpt_ = $('#IksCpt_' + cpt).val();
        var IksUnit_ = $('#IksUnit_' + cpt).val();
        var IksMod_ = $('#IksMod_' + cpt).val();
        var cpt_ = $('#cpt_' + cpt).val();

        var txtCpt = $('#txt_cpt_' + cpt).val();
        var cptreason = $('#cptreason_' + cpt).val();
        var txtcptreason = $('#txt_cptreason_' + cpt).val();

        var cptX = $('#CptReason_' + cpt);
        if (cptX != undefined && cptX.length > 0) {
            var input = $('#CptReason_' + cpt).find('input');
            if (input != undefined && input.length > 0) {
                var inputid = $('#CptReason_' + cpt).find('input').attr('id');
                if (inputid == ('txt_cptreason_' + cpt)) {
                    txtcptreason = $('#CptReason_' + cpt).find('input').val();
                }
            }
        }

        var modifier = $('#modifier_' + cpt).val();
        var txt_modifier_ = $('#txt_modifier_' + cpt).val();
        var query = $('#Query_' + cpt).val();

        var DiffInModifier = 0;
        if (PhyMod_ != IksMod_) {
            DiffInModifier = 1;
        }

        var DiffInCpt = 0;
        if (PhyCpt_ != IksCpt_) {
            DiffInCpt = 1;
        }
        var primaryobj = {
            'PhyCpt': PhyCpt_ == undefined ? '' : PhyCpt_,
            'PhyUnit': PhyUnit_ == undefined ? '' : PhyUnit_,
            'PhyMod': PhyMod_ == undefined ? '' : PhyMod_,
            'IksCpt': IksCpt_ == undefined ? '' : IksCpt_,
            'IksUnit': IksUnit_ == undefined ? '' : IksUnit_,
            'IksMod': IksMod_ == undefined ? '' : IksMod_,
            'Cpt': cpt_ == undefined ? '' : cpt_,
            'txtCpt': txtCpt == undefined ? '' : txtCpt,
            'CptReason': cptreason == undefined ? '' : cptreason,
            'txtcptreason': txtcptreason == undefined ? '' : txtcptreason,
            'modifier': modifier == undefined ? '' : modifier,
            'txt_modifier': txt_modifier_ == undefined ? '' : txt_modifier_,
            'DiffInModifier': DiffInModifier == undefined ? '' : DiffInModifier,
            'DiffInCpt': DiffInCpt == undefined ? '' : DiffInCpt,
            'Query': query == undefined ? '' : query,
            'CptId': cpt
        };

        return primaryobj;
    }
    function GetPrimaryData(cpt) {
        var primaryProvIcd = $('#Primary_ProvIcd_' + cpt).val();
        var primaryIksIcd = $('#Primary_IksIcd_' + cpt).val();

        var primaryNotes = $('#Primary_Notes' + cpt).val();
        if (primaryNotes == 'select') {
            primaryNotes = 0;
        }
        var txtPrimaryNotes = $('#txt_Primary_Notes' + cpt).val();
        if (txtPrimaryNotes != undefined && txtPrimaryNotes.length > 200) {
            txtPrimaryNotes = txtPrimaryNotes.substring(0, 199);
        }

        var primaryHcc = $('#Primary_Hcc' + cpt).val();
        if (primaryHcc == 'select') {
            primaryHcc = 0;
        }
        var txtPrimaryHcc = $('#txt_Primary_Hcc' + cpt).val();
        if (txtPrimaryHcc != undefined && txtPrimaryHcc.length > 200) {
            txtPrimaryHcc = txtPrimaryHcc.substring(0, 199);
        }
        var primaryquery = $('#Primary_Query_' + cpt).val();
        if (primaryquery != undefined && primaryquery.length > 300) {
            primaryquery = primaryquery.substring(0, 299);
        }

        var checkHccX = CheckHcc(primaryProvIcd);
        var checkHccY = CheckHcc(primaryIksIcd);
        var isHcc = 0;
        if (checkHccX.Result == true && checkHccY.Result == true) {
            isHcc = 1;
        }

        var PrimaryObj = {
            'PhySelectedICD': primaryProvIcd,
            'IKSSelectedICD': primaryIksIcd,
            'Notes': primaryNotes == undefined ? 0 : parseInt(primaryNotes),
            'OtherNotes': txtPrimaryNotes == undefined ? "" : txtPrimaryNotes,
            'HCCSource_Id': primaryHcc == undefined ? 0 : parseInt(primaryHcc),
            'HCCSourceNotes': txtPrimaryHcc == undefined ? "" : txtPrimaryHcc,
            'Query': primaryquery,
            'IcdLevel': 0,
            'HccAssociationId': 0,
            'IsHCC': isHcc,
            'CptId': cpt

        };

        return PrimaryObj;

    }
    function GetSecondaryData(cpt) {
        var secondaries = [];
        var SecondaryIcds = $('#tbl_SecondaryICd_' + cpt + ' tr');

        //getting proper Ids
        var properids = [];
        for (var i = 1; i < SecondaryIcds.length; i++) {
            var gettdsOfRow = $(SecondaryIcds[i]).find('td:eq(1)')[0];
            if (gettdsOfRow != undefined) {
                var getRowId = $(gettdsOfRow).find('input')[0];
                if (getRowId != undefined) {
                    var finalId = getRowId.id.split('_');
                    if (finalId != undefined) {
                        finalId = finalId[finalId.length - 1];
                        properids.push(finalId);
                    }
                }
            }
        }

        //getting properdata with respect to proper id
        for (var i = 0; i < properids.length; i++) {
            secondaries.push(getSecodaryIcd(cpt, properids[i]));
        }

        return secondaries;
    }

    function getSecodaryIcd(cpt, icd) {
        var secondaryProvicd = $('#Secondary_ProvIcd_' + cpt + '_' + icd).val();
        var secondaryIksicd = $('#Secondary_IksIcd_' + cpt + '_' + icd).val();

        var secondaryNotes = $('#Secondary_Notes' + cpt + '_' + icd).val();
        if (secondaryNotes == 'select') {
            secondaryNotes = 0;
        }

        var secondaryTxtNotes = $('#txt_Secondary_Notes_' + cpt + '_' + icd).val();
        if (secondaryTxtNotes != undefined && secondaryTxtNotes.length > 200) {
            secondaryTxtNotes = secondaryTxtNotes.substring(0, 199);
        }

        var secondaryHcc = $('#Secondary_Hcc' + cpt + '_' + icd).val();
        if (secondaryHcc == 'select') {
            secondaryHcc = 0;
        }
        var secondaryTxtHcc = $('#txt_hcc_' + cpt + '_' + icd).val();
        if (secondaryTxtHcc != undefined && secondaryTxtHcc.length > 200) {
            secondaryTxtHcc = secondaryTxtHcc.substring(0, 199);
        }

        var secondaryQuery = $('#Secondary_Query_' + cpt + '_' + icd).val();
        if (secondaryQuery != undefined && secondaryQuery.length > 300) {
            secondaryQuery = secondaryQuery.substring(0, 299);
        }

        var isHcc = 0;
        var checkHccX = CheckHcc(secondaryProvicd);
        var checkHccY = CheckHcc(secondaryIksicd);
        var isHcc = 0;
        if (checkHccX.Result == true && checkHccY.Result == true) {
            isHcc = 1;
        }

        var secondaryIcd = {
            'PhySelectedICD': secondaryProvicd,
            'IKSSelectedICD': secondaryIksicd,
            'Notes': secondaryNotes == undefined ? 0 : parseInt(secondaryNotes),
            'OtherNotes': secondaryTxtNotes == undefined ? "" : secondaryTxtNotes,
            'HCCSource_Id': secondaryHcc == undefined ? 0 : parseInt(secondaryHcc),
            'IKSSelectedDesc': secondaryTxtHcc == undefined ? "" : secondaryTxtHcc,
            'Query': secondaryQuery,
            'IcdLevel': 1,
            'HccAssociationId': 0,
            'HCCSourceNotes': secondaryTxtHcc == undefined ? "" : secondaryTxtHcc,
            'CptId': cpt + '_' + icd,
            'IsHCC': isHcc
        }

        return secondaryIcd;
    }
    function getTertiaryTableData(cpt, icd) {
        var TertiaryDpdData = $('#dpd_' + cpt + '_' + icd).val();
        var TertIcds = [];

        var getTrCount = $('#tbl_hcc_' + cpt + '_' + icd + ' tr');
        var propericdsTrack = [];
        for (var i = 1; i < getTrCount.length; i++) {
            var gettdsOfRow = $(getTrCount[i]).find('td:eq(1)')[0];
            if (gettdsOfRow != undefined) {
                var getRowId = $(gettdsOfRow).find('input')[0];
                if (getRowId != undefined) {
                    var finalId = getRowId.id.split('_');
                    if (finalId != undefined && finalId.length > 0) {
                        finalId = finalId[finalId.length - 1];
                        propericdsTrack.push(finalId);
                    }
                }
            }
        }

        for (var i = 0; i < propericdsTrack.length; i++) {
            TertIcds.push(GetIcds(cpt, icd, propericdsTrack[i], TertiaryDpdData));
        }
        return TertIcds;
    }

    function GetIcds(cpt, icd, id, selectedclassification) {
        var primaryProvIcd = $('#txt_hcc_provicd_' + cpt + '_' + icd + '_' + id).val();
        var primaryIksIcd = $('#txt_hcc_iksicd_' + cpt + '_' + icd + '_' + id).val();

        var primaryNotes = $('#Additional_Hcc_Notes' + cpt + '_' + icd + '_' + id).val();
        if (primaryNotes == 'select') {
            primaryNotes = 0;
        }
        var txtPrimaryNotes = $('#txt_Additional_Hcc_Notes' + cpt + '_' + icd + '_' + id).val();
        if (txtPrimaryNotes != undefined && txtPrimaryNotes.length > 200) {
            txtPrimaryNotes = txtPrimaryNotes.substring(0, 199);
        }

        var primaryHcc = $('#Additional_Hcc_Hcc' + cpt + '_' + icd + '_' + id).val();
        if (primaryHcc == 'select') {
            primaryHcc = 0;
        }
        var txtPrimaryHcc = $('#txt_Additional_Hcc_Hcc' + cpt + '_' + icd + '_' + id).val();
        if (txtPrimaryHcc != undefined && txtPrimaryHcc.length > 200) {
            txtPrimaryHcc = txtPrimaryHcc.substring(0, 199);
        }

        var primaryquery = $('#txt_hcc_query_' + cpt + '_' + icd + '_' + id).val();
        if (primaryquery != undefined && primaryquery.length > 300) {
            primaryquery = primaryquery.substring(0, 299);
        }

        var isHcc = 0;
        var checkHccX = CheckHcc(primaryProvIcd);
        var checkHccY = CheckHcc(primaryIksIcd);
        var isHcc = 0;
        if (checkHccX.Result == true && checkHccY.Result == true) {
            isHcc = 1;
        }


        var PrimaryObj = {
            'PhySelectedICD': primaryProvIcd,
            'IKSSelectedICD': primaryIksIcd,
            'Notes': primaryNotes == undefined ? 0 : parseInt(primaryNotes),
            'OtherNotes': txtPrimaryNotes == undefined ? "" : txtPrimaryNotes,
            'HCCSource_Id': primaryHcc,
            'IKSSelectedDesc': "",
            'Query': primaryquery,
            'IcdLevel': 2,
            'HccAssociationId': selectedclassification,
            'IsHCC': isHcc,
            'HCCSourceNotes': txtPrimaryHcc == undefined ? "" : txtPrimaryHcc,
            'CptId': cpt + '_' + icd + '_' + id
        };

        return PrimaryObj;
    }

    function Validations() {
        var x = {
            'AppointmentDate': basedata.AppointmentDateInfo,
            'AppointmentTime': basedata.AppointmentTime,
            'DeptId': basedata.DeptId,
            'EncounterNumber': basedata.EncounterNumber,
            'ProviderName': basedata.ProviderName,
        };
    }

    function lnkView(encounternumber, deptid) {

        var indicator = 0;
        if (isCodingCompleted == false) {
            indicator = indicator + 1;
            isCodingCompleted = true;
        }

        $.ajax({
            url: '/VBAWorkOrder/GetCodingInformation/',
            type: 'GET',
            contentType: 'application/json',
            async: false,
            data: { datakey: encounternumber, deptid: deptid }
        }).done(function (d) {

            if (deptid == 6) {
                var dx = CompareViewGenerator(d.Coding_CptCode_List);
                QueryHoverEventBinder();
                $('#Coding').html(dx);
                $('#Coding').dialog({
                    height: 400,
                    width: 1340,
                    draggable: true,
                    resizable: true,
                    scrollable: true,
                    modal: true,
                    closeOnEscape: false,
                    open: function (e) {
                        QueryHoverEventBinder();
                    },
                    close: function (e) {

                        if (isCodingCompleted == true && indicator > 0) {
                            isCodingCompleted = false;
                            indicator = 0;
                        }

                        $('#Coding').empty();
                        //$(this).close();
                    }
                });
            }
            else if (deptid == 7) {
                var dx = CompareViewGenerator(d.Coding_CptCode_List);
                $('#CodingQA').html(dx);
                QueryHoverEventBinder();
                $('#CodingQA').dialog({
                    height: 400,
                    width: 1340,
                    draggable: true,
                    resizable: true,
                    scrollable: true,
                    modal: true,
                    closeOnEscape: false,
                    open: function (e) {
                    },
                    close: function (e) {
                        if (isCodingCompleted == true && indicator > 0) {
                            isCodingCompleted = false;
                            indicator = 0;
                        }

                        $('#CodingQA').empty();
                    }
                });
            }

        });
    }

    //handling ctrl+s
    $(document).bind('keydown', function (e) {
        if (e.ctrlKey && (e.which == 83) && isCodingCompleted == false) {
            e.preventDefault();
            OnSave('save');
            return false;
        }
    });

    //Handling cancel click
    function CancelCodingDetails() {
        var d = confirm('Are you sure to cancel?');
        if (d) {
            location.href = "/vbaworkorder/workorder";
        }

    }

    function Validate(obj, ind) {

        var cpts = obj.Coding_CptCode_List;
        var cptlength = cpts.length;
        for (var i = 0; i < cpts.length; i++) {
            //Checking Both Phy and IKS cpt
            if (cpts[i].CPTcode_PhySelected.trim() == '') {
                if (cpts[i].CPTCode_IKSSelected.trim() == '') {
                    //alert('Please enter Phy. CPT')
                    alert('Please enter Phy. CPT');
                    var d = $('#cpt_number_' + cpts[i].CptId).prev();
                    d[0].nextElementSibling.style.display = "none";
                    $(d[0]).click();
                    $('#PhyCpt_' + cpts[i].CptId).focus();
                    return false;
                }
            }

            //Checking only IKS cpt
            if (cpts[i].CPTCode_IKSSelected.trim() == '') {
                alert('Please enter IKS CPT');
                var d = $('#cpt_number_' + cpts[i].CptId).prev();
                d[0].nextElementSibling.style.display = "none";
                $(d[0]).click();
                $('#IksCpt_' + cpts[i].CptId).focus();
                return false;
            }

            if ((cpts[i].Unit_IksSelected.trim().length > 0 || cpts[i].Unit_PhySelected.trim().length > 0) && (cpts[i].Unit_IksSelected != cpts[i].Unit_PhySelected) &&

cpts[i].NoteCPTCode == 0) {
                alert('Please Select CPT');
                var d = $('#cpt_number_' + cpts[i].CptId).prev();
                d[0].nextElementSibling.style.display = "none";
                $(d[0]).click();
                $('#cpt_' + cpts[i].CptId).focus();

                return false;
            }

            //checking if note cpt code is 0 when iks and phy cpt does not match
            if ((cpts[i].CPTcode_PhySelected.trim() != cpts[i].CPTCode_IKSSelected.trim()) && cpts[i].NoteCPTCode == 0) {

                alert('Please Select CPT');
                var d = $('#cpt_number_' + cpts[i].CptId).prev();
                d[0].nextElementSibling.style.display = "none";
                $(d[0]).click();
                $('#cpt_' + cpts[i].CptId).focus();

                return false;
            }

            //Checking if note cpt code == 9999 than others should not be empty
            if ((cpts[i].CPTcode_PhySelected.trim() != cpts[i].CPTCode_IKSSelected.trim()) && cpts[i].NoteCPTCode == 9999 && cpts[i].OtherNoteCPTCode.trim() == '') {

                alert('CPT other reason text can not be blank.');
                var d = $('#cpt_number_' + cpts[i].CptId).prev();
                d[0].nextElementSibling.style.display = "none";
                $(d[0]).click();
                $('#txt_cpt_' + cpts[i].CptId).focus();

                return false;
            }

            //Checking for Note Cpt Code reason
            if (cpts[i].NoteCPTCode == 9999 && cpts[i].OtherNoteCPTCode.trim().length == 0) {

                alert('Please Select CPT Reason');
                var d = $('#cpt_number_' + cpts[i].CptId).prev();
                d[0].nextElementSibling.style.display = "none";
                $(d[0]).click();
                $('#txt_cpt_' + cpts[i].CptId).focus();

                return false;
            }


            if (cpts[i].NoteCPTCode == 9999 && cpts[i].OtherNoteCPTCodeReason.trim().length == 0) {

                alert('CPT Reason other text can not be blank.');
                var d = $('#cpt_number_' + cpts[i].CptId).prev();
                d[0].nextElementSibling.style.display = "none";
                $(d[0]).click();
                $('#txt_cptreason_' + cpts[i].CptId).focus();

                return false;
            }

            //if (cpts[i].NoteCPTCode > 0 && cpts[i].NodteCptCode != 9999) {
            //    if ($('#cptreason_' + cpts[i].CptId).length != 0) {
            //        if (cpts[i].NoteCPTCodeReason > 0) {
            //            if (cpts[i].NoteCPTCodeReason == 9999) {
            //                if ($('#txt_cptreason_' + cpts[i].CptId).length && cpts[i].OtherNoteCPTCodeReason.trim().length == 0) {
            //                    alert('Please enter Other Cpt Reason');
            //                    var d = $('#cpt_number_' + cpts[i].CptId).prev();
            //                    d[0].nextElementSibling.style.display = "none";
            //                    $(d[0]).click();
            //                    $('#txt_cptreason_' + cpts[i].CptId).focus();
            //                    return false;
            //                }
            //            }
            //        }
            //        else {
            //            alert('Please select Cpt Reason');
            //            var d = $('#cpt_number_' + cpts[i].CptId).prev();
            //            d[0].nextElementSibling.style.display = "none";
            //            $(d[0]).click();
            //            $('#cptreason_' + cpts[i].CptId).focus();
            //            return false;
            //        }
            //    }
            //    else if ($('#txt_cptreason_' + cpts[i].CptId).length != 0) {
            //        if (cpts[i].OtherNoteCPTCodeReason.trim().length == 0) {
            //            alert('Please enter Other Cpt Reason');
            //            var d = $('#cpt_number_' + cpts[i].CptId).prev();
            //            d[0].nextElementSibling.style.display = "none";
            //            $(d[0]).click();
            //            $('#txt_cptreason_' + cpts[i].CptId).focus();
            //            return false;
            //        }
            //    }

            //}



            //checking for Phy Modifier
            //if (cpts[i].Modifier_PhySelected.trim() == '') {
            //    alert('Please Enter Phy Modifier.');
            //    var d = $('#cpt_number_' + cpts[i].CptId).prev();
            //    d[0].nextElementSibling.style.display = "none";
            //    $(d[0]).click();
            //    $('#PhyMod_' + cpts[i].CptId).focus();
            //    return false;
            //}

            //checking for Iks Modifier
            //if (cpts[i].Modifier_IKSSelected.trim() == '') {
            //    alert('Please Enter IKS Modifier.');
            //    var d = $('#cpt_number_' + cpts[i].CptId).prev();
            //    d[0].nextElementSibling.style.display = "none";
            //    $(d[0]).click();
            //    $('#IksMod_' + cpts[i].CptId).focus();
            //    return false;
            //}

            //Checking for Note Modifier
            if ((cpts[i].Modifier_PhySelected.trim() != cpts[i].Modifier_IKSSelected.trim()) && cpts[i].NoteModifier == 0) {

                alert('Please Select Modifier.');
                var d = $('#cpt_number_' + cpts[i].CptId).prev();
                d[0].nextElementSibling.style.display = "none";
                $(d[0]).click();
                $('#modifier_' + cpts[i].CptId).focus();

                return false;
            }

            //checking for Note Modifier Reason
            if ((cpts[i].Modifier_PhySelected.trim() != cpts[i].Modifier_IKSSelected.trim()) && cpts[i].NoteModifier == 9999 && cpts[i].OtherNoteModifier.trim() == '') {

                alert('Modifier other reason text can not be blank.');
                var d = $('#cpt_number_' + cpts[i].CptId).prev();
                d[0].nextElementSibling.style.display = "none";
                $(d[0]).click();
                $('#txt_modifier_' + cpts[i].CptId).focus();

                return false;
            }

            if (cpts[i].Unit_PhySelected.trim().length > 0) {
                if (isNaN(cpts[i].Unit_PhySelected.trim())) {

                    alert('please enter numeric value for PhyUnit');
                    var d = $('#cpt_number_' + cpts[i].CptId).prev();
                    d[0].nextElementSibling.style.display = "none";
                    $(d[0]).click();
                    $('#PhyUnit_' + cpts[i].CptId).focus();
                    $('#PhyUnit_' + cpts[i].CptId).val('');

                    return false;
                }
            }

            if (cpts[i].Unit_IksSelected.trim().length > 0) {
                if (isNaN(cpts[i].Unit_IksSelected.trim())) {

                    alert('please enter numeric value for IksUnit');
                    var d = $('#cpt_number_' + cpts[i].CptId).prev();
                    d[0].nextElementSibling.style.display = "none";
                    $(d[0]).click();
                    $('#IksUnit_' + cpts[i].CptId).focus();
                    $('#IksUnit_' + cpts[i].CptId).val('');

                    return false;
                }
            }
            //No Validations for Query As of Now
            var tertSel = [];
            var tertiaryIcds = $('#divHcc_' + cpts[i].CptId + '>div[id]');
            if (tertiaryIcds != undefined && tertiaryIcds.length > 0) {
                for (var k = 0; k < tertiaryIcds.length; k++) {
                    var sel = $(tertiaryIcds[k]).find('select');
                    if (sel != undefined && sel.length > 0) {
                        var id = sel[0].id
                        tertSel.push($('#' + id).val());
                    }
                }
            }


            var count = tertSel.reduce(function (acc, curr) {
                if (typeof acc[curr] == 'undefined') {
                    acc[curr] = 1;
                } else {
                    acc[curr] += 1;
                }

                return acc;
            }, {});


            var keylist = Object.keys(count);
            if (keylist != undefined && keylist.length > 0) {
                for (var j = 0; j < keylist.length; j++) {
                    if (count[keylist[j]] > 1) {
                        alert('Additional Hcc Classification with same name exists');
                        return;
                    }
                }
            }

            //Validating  its Icds
            var icds = cpts[i].coding_ICD_List;
            var primaryIcd = [];
            var secondaryIcds = [];
            var tertiaryIcds = [];

            if (icds != undefined && icds.length != 0) {
                primaryIcd = icds.filter(function (z) {
                    return z.IcdLevel == 0;
                });

                secondaryIcds = icds.filter(function (z) {
                    return z.IcdLevel == 1;
                });

                tertiaryIcds = icds.filter(function (z) {
                    return z.IcdLevel == 2;
                });
            }




            if (primaryIcd.length == 0) {
                alert('Primary Diagnosis required');
                $('#Primary_ProvIcd_' + cpts[i].CptId).focus();

                return false;
            }
            if (primaryIcd.length > 0 && !ValidateIcds(primaryIcd, 'p', i)) {

                return false;
            }

            if (secondaryIcds.length > 0 && !ValidateIcds(secondaryIcds, 's', i, ind)) {

                return false;
            }

            if (tertiaryIcds.length > 0 && !ValidateIcds(tertiaryIcds, 's', i, ind)) {
                return false;
            }
        }

        return true;
    }

    function ValidateIcds(icds, s, cptx) {

        var icdsLength = icds.length;
        for (var i = 0; i < icdsLength; i++) {
            if (s == 'p') {
                //Checking Phy ICD
                if (icds[i].PhySelectedICD.trim() == '') {

                    alert('Please enter Phy. ICD');
                    $('#Primary_ProvIcd_' + icds[i].CptId).focus();

                    return false;
                }

                //Checking Iks icd
                if (icds[i].IKSSelectedICD.trim() == '') {

                    alert('Please enter IKS. ICD');
                    $('#Primary_IksIcd_' + icds[i].CptId).focus();

                    return false;
                }

                //checking for Hcc
                if (icds[i].IsHCC == 1) {
                    if (icds[i].PhySelectedICD.trim() == icds[i].IKSSelectedICD.trim()) {
                        //validation for HCC
                        if ((icds[i].PhySelectedICD.trim() == icds[i].IKSSelectedICD.trim()) && icds[i].HCCSource_Id == 0) {

                            alert('Please Select Hcc Source.');
                            $('#Primary_Hcc' + icds[i].CptId).focus();

                            return false;
                        }


                        if ((icds[i].PhySelectedICD.trim() == icds[i].IKSSelectedICD.trim()) && icds[i].HCCSource_Id > 0 && icds[i].HCCSourceNotes.trim() == '') {

                            alert('Hcc Source reason text can not be blank.');
                            $('#txt_Primary_Hcc' + icds[i].CptId).focus();

                            return false;
                        }
                    }
                    else if (icds[i].PhySelectedICD.trim() != icds[i].IKSSelectedICD.trim()) {

                        if ((icds[i].PhySelectedICD.trim() != icds[i].IKSSelectedICD.trim()) && icds[i].Notes == 0) {

                            alert('Please Select Notes.');
                            $('#Primary_Notes' + icds[i].CptId).focus();

                            return false;
                        }


                        if ((icds[i].PhySelectedICD.trim() != icds[i].IKSSelectedICD.trim()) && icds[i].Notes == 9999 && icds[i].OtherNotes.trim() == '') {

                            alert('Notes reason text can not be blank.');
                            $('#txt_Primary_Notes' + icds[i].CptId).focus();

                            return false;
                        }

                        if ((icds[i].PhySelectedICD.trim() != icds[i].IKSSelectedICD.trim()) && icds[i].HCCSource_Id == 0) {

                            alert('Please Select Hcc Source.');
                            $('#Primary_Hcc' + icds[i].CptId).focus();

                            return false;
                        }


                        if ((icds[i].PhySelectedICD.trim() != icds[i].IKSSelectedICD.trim()) && icds[i].HCCSource_Id > 0 && icds[i].HCCSourceNotes.trim() == '') {

                            alert('Hcc Source reason text can not be blank.');
                            $('#txt_Primary_Hcc' + icds[i].CptId).focus();

                            return false;
                        }
                    }
                }
                else if (icds[i].IsHCC == 0) {
                    //validation for Notes
                    if ((icds[i].PhySelectedICD.trim() != icds[i].IKSSelectedICD.trim()) && icds[i].Notes == 0) {

                        alert('Please Select Notes.');
                        $('#Primary_Notes' + icds[i].CptId).focus();

                        return false;
                    }


                    if ((icds[i].PhySelectedICD.trim() != icds[i].IKSSelectedICD.trim()) && icds[i].Notes == 9999 && icds[i].OtherNotes.trim() == '') {

                        alert('Notes reason text can not be blank.');
                        $('#txt_Primary_Notes' + icds[i].CptId).focus();

                        return false;
                    }
                }
            }
            else {
                if (icds[i].IKSSelectedICD.trim().length > 0 || icds[i].PhySelectedICD.trim().length > 0 || icds[i].Query.trim().length > 0) {

                    //Added by Wasae Afterwards start
                    if (icds[i].IcdLevel == 2 && icds[i].HccAssociationId == 0) {

                        alert("Please Specify Additional ICD Classification");
                        var ids = icds[i].CptId.split("_");
                        ids = ids[0] + "_" + ids[1];
                        $('#dpd_' + ids).focus();

                        return false;
                    }
                    //Added by Wasae Afterwards end

                    //Checking Phy ICD
                    if (icds[i].PhySelectedICD.trim() == '') {

                        alert('Please enter Phy. ICD');
                        if (icds[i].IcdLevel == 1) {
                            $('#Secondary_ProvIcd_' + icds[i].CptId).focus();
                        }
                        else if (icds[i].IcdLevel == 2) {
                            $('#txt_hcc_provicd_' + icds[i].CptId).focus();
                        }

                        return false;
                    }

                    //Checking Iks icd
                    if (icds[i].IKSSelectedICD.trim() == '') {

                        alert('Please enter IKS. ICD');
                        if (icds[i].IcdLevel == 1) {
                            $('#Secondary_IksIcd_' + icds[i].CptId).focus();
                        }
                        else if (icds[i].IcdLevel == 2) {
                            $('#txt_hcc_iksicd_' + icds[i].CptId).focus();
                        }

                        return false;
                    }

                    //checking for Hcc
                    if (icds[i].IsHCC == 1) {

                        if (icds[i].PhySelectedICD.trim() == icds[i].IKSSelectedICD.trim()) {
                            if ((icds[i].PhySelectedICD.trim() == icds[i].IKSSelectedICD.trim()) && icds[i].HCCSource_Id == 0) {

                                alert('Please Select Hcc Source.');
                                if (icds[i].IcdLevel == 1) {
                                    $('#Secondary_Hcc' + icds[i].CptId).focus();
                                }
                                else if (icds[i].IcdLevel == 2) {
                                    $('#Additional_Hcc_Hcc' + icds[i].CptId).focus();
                                }
                                return false;
                            }


                            if ((icds[i].PhySelectedICD.trim() == icds[i].IKSSelectedICD.trim()) && icds[i].HCCSource_Id > 0 && icds[i].HCCSourceNotes.trim() == '') {

                                alert('Hcc Source reason text can not be blank.');
                                if (icds[i].IcdLevel == 1) {
                                    $('#txt_hcc_' + icds[i].CptId).focus();
                                }
                                else if (icds[i].IcdLevel == 2) {
                                    $('#txt_Additional_Hcc_Hcc' + icds[i].CptId).focus();
                                }

                                return false;
                            }
                        }
                        else if (icds[i].PhySelectedICD.trim() != icds[i].IKSSelectedICD.trim()) {

                            if ((icds[i].PhySelectedICD.trim() != icds[i].IKSSelectedICD.trim()) && icds[i].Notes == 0) {

                                alert('Please Select Notes.');
                                if (icds[i].IcdLevel == 1) {
                                    $('#Secondary_Notes' + icds[i].CptId).focus();
                                }
                                else if (icds[i].IcdLevel == 2) {
                                    $('#Additional_Hcc_Notes' + icds[i].CptId).focus();
                                }

                                return false;
                            }

                            if ((icds[i].PhySelectedICD.trim() != icds[i].IKSSelectedICD.trim()) && icds[i].Notes == 9999 && icds[i].OtherNotes.trim() == '') {

                                alert('Notes reason text can not be blank.');
                                if (icds[i].IcdLevel == 1) {
                                    $('#txt_Secondary_Notes_' + icds[i].CptId).focus();
                                }
                                else if (icds[i].IcdLevel == 2) {
                                    $('#txt_Additional_Hcc_Notes' + icds[i].CptId).focus();
                                }

                                return false;
                            }

                            if ((icds[i].PhySelectedICD.trim() != icds[i].IKSSelectedICD.trim()) && icds[i].HCCSource_Id == 0) {

                                alert('Please Select Hcc Source.');
                                if (icds[i].IcdLevel == 1) {
                                    $('#Secondary_Hcc' + icds[i].CptId).focus();
                                }
                                else if (icds[i].IcdLevel == 2) {
                                    $('#Additional_Hcc_Hcc' + icds[i].CptId).focus();
                                }

                                return false;
                            }

                            if ((icds[i].PhySelectedICD.trim() != icds[i].IKSSelectedICD.trim()) && icds[i].HCCSource_Id > 0 && icds[i].HCCSourceNotes.trim() == '') {

                                alert('Hcc Source reason text can not be blank.');
                                if (icds[i].IcdLevel == 1) {
                                    $('#txt_hcc_' + icds[i].CptId).focus();
                                }
                                else if (icds[i].IcdLevel == 2) {
                                    $('#txt_Additional_Hcc_Hcc' + icds[i].CptId).focus();
                                }

                                return false;
                            }
                        }
                    }
                    else if (icds[i].IsHCC == 0) {
                        //validation for Notes
                        if ((icds[i].PhySelectedICD.trim() != icds[i].IKSSelectedICD.trim()) && icds[i].Notes == 0) {

                            alert('Please Select Notes.');
                            if (icds[i].IcdLevel == 1) {
                                $('#Secondary_Notes' + icds[i].CptId).focus();
                            }
                            else if (icds[i].IcdLevel == 2) {
                                $('#Additional_Hcc_Notes' + icds[i].CptId).focus();
                            }

                            return false;
                        }


                        if ((icds[i].PhySelectedICD.trim() != icds[i].IKSSelectedICD.trim()) && icds[i].Notes == 9999 && icds[i].OtherNotes.trim() == '') {

                            alert('Notes reason text can not be blank.');
                            if (icds[i].IcdLevel == 1) {
                                $('#txt_Secondary_Notes_' + icds[i].CptId).focus();
                            }
                            else if (icds[i].IcdLevel == 2) {
                                $('#txt_Additional_Hcc_Notes' + icds[i].CptId).focus();
                            }

                            return false;
                        }
                    }

                }
            }

        }
        return true;
    }

    //AutoComplete TextBox
    $(".cpt-control").autocomplete({
        source: arrCPT,
        minLength: 3
    });

    var selector = ".cpt-control";
    $(document).on('keydown.autocomplete', selector, function () {
        $(this).autocomplete({
            source: arrCPT,
            minLength: 3
        });
    });

    $(".ICDTextWidth").autocomplete({
        source: arrICD,
        minlength: 3
    });
    var selector = ".ICDTextWidth";
    $(document).on('keydown.autocomplete', selector, function () {
        $(this).autocomplete({
            source: arrICD,
            minLength: 3
        });
    });

    function AccordianClick(a) {

        var acc = $(a)[0];
        acc.classList.toggle('active');

        var d = $(acc).find('div');
        var did = d[0].id

        //var lbltextHandling = $('#' + did).prev().prev()
        //var lblId = $(lbltextHandling).attr('id');
        //if ($('#' + lblId).text() == '+') {
        //    $('#' + lblId).text('-');
        //}
        //else {
        //    $('#' + lblId).text('+');
        //}

        var spans = $(a).find('span');
        if (spans[0] != undefined) {
            if ($(spans[0]).attr('class') == undefined || $(spans[0]).attr('class') == "iconarrowup") {
                $(spans[0]).attr('class', "iconarrowdown");
            }
            else {
                $(spans[0]).attr('class', "iconarrowup");
            }
        }



        $('#' + did + ' select').attr('id', '');

        var panel = acc.nextElementSibling;
        if (panel.style.display === "block") {
            panel.style.display = "none";
            var cptinfo = CollectCptData(did);
            var cptInfoX = {
                "CPTCode_IKSSelected": cptinfo.IksCpt,
                "CPTcode_PhySelected": cptinfo.PhyCpt,
                "Modifier_IKSSelected": cptinfo.IksMod,
                "Modifier_PhySelected": cptinfo.PhyMod,
                "NoteCPTCode": cptinfo.Cpt != undefined && cptinfo.length != 0 ? parseInt(cptinfo.Cpt) : 0,
                "NoteCPTCodeReason": cptinfo.CptReason != undefined && cptinfo.CptReason.length != 0 ? parseInt(cptinfo.CptReason) : 0,
                "NoteModifier": cptinfo.modifier != undefined && cptinfo.modifier.length != 0 ? parseInt(cptinfo.modifier) : 0,
                "Unit_IksSelected": cptinfo.IksUnit,
                "Unit_PhySelected": cptinfo.PhyUnit,
                "IsDiffInCPTCode": cptinfo.DiffInCpt != undefined ? parseInt(cptinfo.DiffInCpt) : 0,
                "IsDiffInModifier": cptinfo.DiffInModifier != undefined ? parseInt(cptinfo.DiffInModifier) : 0,
                "OtherNoteCPTCode": cptinfo.txtCpt,
                "OtherNoteCPTCodeReason": cptinfo.txtcptreason,
                "OtherNoteModifier": cptinfo.txt_modifier,
                "Query": cptinfo.Query
            }

            var dhtml = ReplicateCpt(did, cptInfoX);
            $('#' + did).html('');
            $('#' + did).html(dhtml);

            $('#' + did + ' select').attr('id', '');
            $('#' + did).show();
        } else {
            panel.style.display = "block";
            $('#' + did).hide();
        }
    }


    function ReplicateCpt(cptix, cptinfo) {
        var cpthtml = "";
        //var cpthtml = "<br>";
        //let codingcptHeader = '<div id="divCptCodeHeader" class="headerNew fl width100"><div class="chart-col1">Phy CPT</div><div class="chart-col_Unit1">Unit</div><div class="chart-col2">Phy Mod</div><div class="chart-col3">IKS CPT</div><div class="chart-col_Unit2">Unit</div><div class="chart-col4">IKS Mod</div><div class="chart-col5">&nbsp;</div><div class="chart-col6">CPT</div><div class="chart-col7">CPT Reason</div><div class="chart-col8">Modifier</div><div class="chart-col9">Query</div><div class="chart-col10"></div></div>';
        //let codingcptHeader='<div id="divCptCodeHeader" class="headerNew fl width100"><div class="chart-col1">Phy CPT</div><div class="chart-col_Unit1">Unit</div><div class="chart-col2">Phy Mod</div><div class="chart-col3">IKS CPT</div><div class="chart-col_Unit2">Unit</div><div class="chart-col4">IKS Mod</div><div class="chart-col5">&nbsp;</div><div class="chart-col6">&nbsp;</div><div class="chart-col7">CPT</div><div class="chart-col8">CPT Reason</div><div class="chart-col9">Modifier</div><div class="chart-col10">Query</div><div class="chart-col11"></div></div>';
        let codingcptHeader = '<div id="divCptCodeHeader" class="headerNewCPT fl width100"><div class="chart-col1">Phy CPT</div><div class="chart-col_Unit1">Unit</div><div class="chart-col2">Phy Mod</div><div class="chart-col3">IKS CPT</div><div class="chart-col_Unit1">Unit</div><div class="chart-col4">IKS  Mod</div><div class="chart-col5">&nbsp;</div><div class="chart-col6">CPT</div><div class="chart-col7">CPT Reason</div><div class="chart-col8">Modifier</div><div class="chart-col9">Query</div><div class="chart-col10"></div></div>';
        let CodingCptData = '';
        CodingCptData += '<div class="cptcodeblk col12">';
        if (cptinfo) {
            CodingCptData += '<div class="chart-col1 cpt-control ui-autocomplete-input"><input type="text"  value="' + (cptinfo.CPTcode_PhySelected == null ? '' :

cptinfo.CPTcode_PhySelected) + '" onchange="onCptChange(' + cptix + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col_Unit1"><input type="text"  value="' + (cptinfo.Unit_PhySelected == null ? '' : cptinfo.Unit_PhySelected) + '" onchange="onUnitChange(' + cptix + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col2 cpt-control ui-autocomplete-input"><input type="text"  value="' + (cptinfo.Modifier_PhySelected == null ? '' : cptinfo.Modifier_PhySelected) + '" onchange="onModifierChange(' + cptix + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col3  cpt-control ui-autocomplete-input"><input type="text"  value="' + (cptinfo.CPTCode_IKSSelected == null ? '' : cptinfo.CPTCode_IKSSelected) + '" onchange="OnIksCptChange(' + cptix + ',' + cptinfo.NoteCPTCode + ',' + cptinfo.NoteCPTCodeReason + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col_Unit1"><input type="text" value="' + (cptinfo.Unit_IksSelected == null ? '' : cptinfo.Unit_IksSelected) + '" onchange="OnIksUnitChange(' + cptix + ',' + cptinfo.NoteCPTCode + ',' + cptinfo.NoteCPTCodeReason + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col4 cpt-control ui-autocomplete-input"><input type="text" value="' + (cptinfo.Modifier_IKSSelected == null ? '' : cptinfo.Modifier_IKSSelected) + '" onchange="OnIksModifierChange(' + cptix + ',' + cptinfo.NoteModifier + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col5">';
            CodingCptData += '<div class="statusindi grn" style="display:' + (((cptinfo.CPTcode_PhySelected.length != 0 && cptinfo.CPTCode_IKSSelected.length != 0) && ((cptinfo.CPTcode_PhySelected == cptinfo.CPTCode_IKSSelected) && (cptinfo.Unit_PhySelected == cptinfo.Unit_IksSelected) && (cptinfo.Modifier_PhySelected == cptinfo.Modifier_IKSSelected))) ? 'block' : 'none') + '; vertical-align: top;"></div>';
            CodingCptData += '<div class="statusindi blue" style="display:' + (((cptinfo.Modifier_PhySelected != cptinfo.Modifier_IKSSelected)) ? 'block' : 'none') + '; vertical-align: top;"></div>';
            CodingCptData += '<div class="statusindi red1" style="display:' +
                (((cptinfo.CPTcode_PhySelected != cptinfo.CPTCode_IKSSelected) || (cptinfo.Unit_PhySelected != cptinfo.Unit_IksSelected))
                ? 'block' : 'none') + '; vertical-align: top;"></div>';
            CodingCptData += '</div>';
            CodingCptData += '<div class="chart-col6"><div><div id = "Cpt_' + cptix + '"> ' +
                FormingCptCase(cptinfo, cptix)
                + '</div>&nbsp;</div></div>';
            CodingCptData += '<div class="chart-col7"><div><div id = "CptReason_' + cptix + '">' +
                 FormingCptReasonCase(cptinfo, cptix)
            + '</div>&nbsp;</div></div>';
            CodingCptData += '<div class="chart-col8"><div><div id = "Modifier_' + cptix + '">' +
            FormingCptModifierCase(cptinfo, cptix)
                + '</div>&nbsp;</div></div>';
            CodingCptData += '<div class="chart-col9"><input type="text" value="' + cptinfo.Query + '"' + (isCodingCompleted == true ? 'disabled="true"' : '') +

'/></div>';
            CodingCptData += '<div class="chart-col11">';
            //CodingCptData += '<input type="button" value="+"  class="btnPlus" onclick="AddNewCpt()"' + (isCodingCompleted == true ? 'disabled="true"' : '') +

            '/><input type="button" value="-"  class="btnMinus" onclick="DeleteCpt(' + cptix + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
            CodingCptData += '</div>';
        }
        else {
            CodingCptData += '<div class="chart-col1 cpt-control"><input type="text"  value="" onchange="onCptChange(' + cptix + ')"' + (isCodingCompleted == true ?

'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col_Unit1"><input type="text"  value="" onchange="onUnitChange(' + cptix + ')"' + (isCodingCompleted == true ?

'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col2 cpt-control"><input type="text" value="" onchange="onModifierChange(' + cptix + ')"' + (isCodingCompleted == true

? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col3 cpt-control"><input type="text"  value="" onchange="OnIksCptChange(' + cptix + ',undefined,undefined)"' +

(isCodingCompleted == true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col_Unit1"><input type="text" value="" onchange="OnIksUnitChange(' + cptix + ',undefined,undefined)"' +

(isCodingCompleted == true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col4 cpt-control"><input type="text" value="" onchange="OnIksModifierChange(' + cptix + ',undefined,undefined)"' +

(isCodingCompleted == true ? 'disabled="true"' : '') + '/></div>';
            CodingCptData += '<div class="chart-col5">';
            CodingCptData += '<div class="statusindi grn" style="display:none; vertical-align: top;"></div>';
            CodingCptData += '<div class="statusindi blue" style="display:none; vertical-align: top;"></div>';
            CodingCptData += '<div class="statusindi red1" style="display:none; vertical-align: top;"></div>';
            CodingCptData += '</div>';
            //CodingCptData += '<div class="chart-col6"><div id = "Notes_' + cptix + '">&nbsp;</div></div>';
            CodingCptData += '<div class="chart-col6"><div><div>&nbsp;</div>&nbsp;</div></div>';
            CodingCptData += '<div class="chart-col7"><div><div>&nbsp;</div>&nbsp;</div></div>';
            CodingCptData += '<div class="chart-col8"><div><div>&nbsp;</div>&nbsp;</div></div>';
            CodingCptData += '<div class="chart-col9"><input type="text" value=""' + (isCodingCompleted == true ? 'disabled="true"' : '') + '></div>';
            CodingCptData += '<div class="chart-col11">';
            //CodingCptData += '<input type="button" value="+"  class="btnPlus" onclick="AddNewCpt()"' + (isCodingCompleted == true ? 'disabled="true"' : '') +            '/><input type="button" value="-"  class="btnMinus" onclick="DeleteCpt(' + cptix + ')"' + (isCodingCompleted == true ? 'disabled="true"' : '') + '/>';
            CodingCptData += '</div>';
        }
        CodingCptData += '</div>';

        var ds = jQuery(CodingCptData);
        $(ds).find('div').removeAttr('id');
        $(ds).find('select').removeAttr('id');
        $(ds).find('input').removeAttr('id');
        CodingCptData = $(ds).html();

        cpthtml += codingcptHeader + '<div class="cptcodeblk col12">' + CodingCptData + '</div>';

        return cpthtml;
    }


    function RemoveHccClassification(cpt, row) {
        var dx = $('#divHcc_' + cpt + '> div');
        if (dx.length > 1) {
            $('#div_hcc_' + cpt + '_' + row).remove();
            alert('Hcc Classifcation Removed.');
        }

    }

    $(function () {
        $('.inputx').on('keydown change paste', 'input', function (d) {
            alert('Hiii updated');
            //$(this).attr('value', $(this).val());

        });
    });


    function QueryHoverEventBinder() {
        //Binding Hover event to textboxes
        var QX = $("input[type='text'][id*='Query']");
        $(QX).each(function () {
            var id = this.id;
            $('#' + id).hover(function () {
                $('#' + id).attr('title', $('#' + id).val());
            });
        });

        var TX = $("input[type='text'][id*='query']");
        $(TX).each(function () {
            var id = this.id;
            $('#' + id).hover(function () {
                $('#' + id).attr('title', $('#' + id).val());
            });
        });
    }


    function CompareViewGenerator(cpts) {
        let cptHtml = "";
        let primaryHtml = "";
        let secondaryHtml = "";
        let tertiaryhtml = "";
        let fullHtml = '';

        for (var j = 0; j < cpts.length; j++) {
            primaryHtml = "";
            secondaryHtml = "";
            cptHtml = "";
            //cptHtml += '<div class="accordion inline"  onclick="AccordianClick(this)"><label id=' + 'lbl' + j + ' style="color: #e57f26;font-size: xx-large;float:right;padding-right: 30px;">+</label><span>&nbsp;</span>';
            //cptHtml += '<div id="' + j + '" style="pointer-events:none" >' + ReplicateCpt(j, cpts[j]) + '<div></div>' + '</div>//</div>'; // ReplicateCpt(j, cpts[j])
            cptHtml += '<div id="cpt_number_' + j + '" class="CompareX col12">' + FormCptDiv(cpts[j], j);

            cpts[j].coding_ICD_List_Count = cpts[j].coding_ICD_List.length;
            if (cpts[j].coding_ICD_List_Count > 0) {

                //var pm = cpts[j].coding_ICD_List.filter(function (dx) { return dx.icdLevel == 1 });
                //if (pm.length == 0) {
                //    if (cpts[j].coding_ICD_List[0]!=undefined) {
                //        cpts[j].coding_ICD_List[0].IcdLevel = 0;
                //    }

                //}

                for (var i = 0; i < cpts[j].coding_ICD_List.length; i++) {

                    if (cpts[j].coding_ICD_List[i].IcdLevel == 0) {
                        primaryHtml += FormPrimaryDiv(cpts[j].coding_ICD_List[i], j);
                    }
                    else if (cpts[j].coding_ICD_List[i].IcdLevel == 1) {
                        secondaryHtml += FormSecondaryTable(cpts[j].coding_ICD_List[i], j, i);
                    }
                }

                var tertiaryicds = cpts[j].coding_ICD_List.filter(function (itx) {
                    if (itx.IcdLevel == 2) {
                        return itx;
                    }
                });


                var segre = _.groupBy(tertiaryicds, function (c) { return c.HccAssociationId });
                var keys = Object.keys(segre);
                let tertiaryData = "";
                for (var l = 0; l < keys.length; l++) {
                    var tertiary_table_data = "";
                    var tertiary_table_hearder = "";
                    tertiary_table_hearder += FormTertiaryTableHeader(j, l + 1, keys[l]);
                    for (var m = 0; m < segre[keys[l]].length; m++) {
                        tertiary_table_data += FormtertiaryTableRow(j, l + 1, m + 1, segre[keys[l]][m]);
                    }
                    tertiary_table_data += "</table></div></div>";
                    tertiaryData += tertiary_table_hearder + tertiary_table_data + '</div>';
                }

                var aSecondaryDiv = secondaryDiv.replace('$$id', j);

                if (primaryHtml.length == 0) {
                    primaryHtml += FormPrimaryDiv(undefined, j);
                }

                if (secondaryHtml.length == 0) {
                    secondaryHtml += FormSecondaryTable(undefined, j, 1);
                }

                if (tertiaryData.length == 0) {
                    tertiary_table_hearder = FormTertiaryTableHeader(j, 1, undefined);
                    tertiaryData = tertiary_table_hearder + (FormtertiaryTableRow(j, 1, 1, undefined) + '</table></div></div>');
                }

                secondaryHtml = aSecondaryDiv + secondaryHtml + '</div></table></div>';

                fullHtml += cptHtml + primaryHtml + secondaryHtml + '<div id="divHcc_' + j + '"  class="col12">' + tertiaryData + '</div></div></div></div></div>';
            }
            else {
                var aSecondaryDiv = secondaryDiv.replace('$$id', j);
                secondaryHtml = aSecondaryDiv + (FormSecondaryTable(undefined, j, 1)) + '</div></table></div>';
                fullHtml += (cptHtml) + '</div>' + (FormPrimaryDiv(undefined, j)) + secondaryHtml + ' <div id="divHcc_' + j + '"  class="col12">' +

(FormTertiaryTableHeader(j, 1, undefined) + FormtertiaryTableRow(j, 1, 1, undefined)) + '</table></div></div>' + '</div></div></div></div>';
            }

        }


        return fullHtml;
    }

    function ClearIconsOnAllTextEmptyCpt(cptix) {
        var PhyCpt = $('#PhyCpt_' + cptix).val();
        var IksCpt = $('#IksCpt_' + cptix).val();
        var PhyUnit = $('#PhyUnit_' + cptix).val();
        var IksUnit = $('#IksUnit_' + cptix).val();
        var PhyMod = $('#PhyMod_' + cptix).val();
        var IksMod = $('#IksMod_' + cptix).val();

        if (PhyCpt.length == 0 && IksCpt.length == 0) {
            if (PhyUnit.length == 0 && IksUnit.length == 0) {
                if (PhyMod.length == 0 && IksMod.length == 0) {
                    $('#Cpt_IcdStatus_Green_' + cptix).parent().append('&nbsp;');
                    $('#Cpt_IcdStatus_Green_' + cptix).hide('slow');
                    $('#Cpt_IcdStatus_Blue_' + cptix).hide('slow');
                    $('#Cpt_IcdStatus_Red_' + cptix).hide('slow');
                }
            }
        }

    }

    function showProgressBar() {
        try {
            //alert("show Loader");
            $('#DisableDiv').fadeTo('fast');
            $('#DisableDiv').append('<div class="DisableDiv"><div class="loader"></div></div>');
        }
        catch (e) {
            //   alert("Error on showProgressBar(): " + e.message);
            console.log("Error on showProgressBar(): " + e.message);
        }
    }

    function hideProgressBar() {
        //alert("hide Loader");
        try {
            if ($('#DisableDiv').html().length > 0) {
                $('#DisableDiv').html("");
            }
        }
        catch (e) {
            //   alert("Error on hideProgressBar(): " + e.message);
            console.log("Error on hideProgressBar(): " + e.message);
        }
    }

</script>
